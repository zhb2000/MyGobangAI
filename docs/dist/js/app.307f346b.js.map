{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/board.jpg","webpack:///./src/App.vue?7e02","webpack:///./src/components/MyGrid.vue?2205","webpack:///./src/App.vue?6d74","webpack:///./src/components/GameBoard.vue?d9b1","webpack:///./src/GameAlgo/ChessType.js","webpack:///src/components/GameBoard.vue","webpack:///./src/components/GameBoard.vue?d45c","webpack:///./src/components/GameBoard.vue","webpack:///./src/components/MyGrid.vue?6980","webpack:///src/components/MyGrid.vue","webpack:///./src/components/MyGrid.vue?78b7","webpack:///./src/components/MyGrid.vue","webpack:///./src/components/InfoCard.vue?1b6e","webpack:///./src/GameAlgo/Status.js","webpack:///src/components/InfoCard.vue","webpack:///./src/components/InfoCard.vue?05cc","webpack:///./src/components/InfoCard.vue","webpack:///./src/components/SettingCard.vue?0127","webpack:///./src/GameAlgo/Config.js","webpack:///src/components/SettingCard.vue","webpack:///./src/components/SettingCard.vue?91f5","webpack:///./src/components/SettingCard.vue","webpack:///./src/GameAlgo/MyArray.js","webpack:///./src/GameAlgo/Zobrist.js","webpack:///./src/GameAlgo/Direction.js","webpack:///./src/GameAlgo/Coord.js","webpack:///./src/GameAlgo/MiBackup.js","webpack:///./src/GameAlgo/StandardType.js","webpack:///./src/GameAlgo/Score.js","webpack:///./src/GameAlgo/ScoreCalculator.js","webpack:///./src/GameAlgo/ChessBoard.js","webpack:///./src/GameAlgo/TableCell.js","webpack:///./src/GameAlgo/TransTable.js","webpack:///./src/GameAlgo/SearchAlgo.js","webpack:///./src/Controller/GameControl.js","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/components/GameBoard.vue?872b","webpack:///./src/components/InfoCard.vue?3508","webpack:///./src/components/SettingCard.vue?588f"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","scopedSlots","_u","fn","ref","uiBoard","justChess","maskOn","playing","firstChess","on","handleClick","proxy","directives","rawName","expression","handleStart","staticRenderFns","staticClass","_v","_s","message","_m","_l","cell","id","$event","x","y","class","empty_chess","chess","black_chess","white_chess","secondChess","just_chess","number","EMPTY_CHESS","COM_CHESS","HUM_CHESS","cellArray","createArray","msgMaskOn","computed","props","Array","type","Number","default","Boolean","methods","array","$emit","showMsg","msgString","setTimeout","component","_t","goMaxDepth","nodeNum","numOfLeaf","timeUsed","isOutTime","ABPruning","f","sumMatch","completeMatch","partialMatch","leafMatch","Status","startTime","posDepth","leafNum","winNum","update","Math","round","domProps","_q","firstSide","isArray","useHeuristic","_i","$$a","$$el","target","$$c","checked","$$v","$$i","concat","useTransTable","staticStyle","startGame","Config","BOARD_SIZE","MAX_EMPTY_NUM","START_KILLER","MAX_DEPTH","MAX_TIME","CLOSE_RADIUS","CALC_LINE_ALGO","l1","l2","l3","arguments","arr","fill","randomNum","floor","random","MAX_SAFE_INTEGER","Zobrist","empty","hum","com","zobristCode","oldChess","newChess","oldArray","newArray","index","Direction","VERTICAL","HORIZONTAL","DIAGONAL","ANTIDIAGONAL","Coord","h","MiBackup","coords","EMPTY","SELF","BLOCKED","Score","FIVE","ALIVE_FOUR","BLOCKED_FOUR","ALIVE_THREE","BLOCKED_THREE","ALIVE_TWO","BLOCKED_TWO","INF","selfCnt","emptyCnt","blockedCnt","scoreLine","line","calcuArray","sum","fiveScore","fiveNum","aliveFourScore","aliveFourNum","blockedFourNum","aliveThreeScore","aliveThreeNum","blockedThreeNum","aliveTwoScore","aliveTwoNum","blockedTwoNum","hasFive","hasAliveFour","hasBlockedFour","hasAliveThree","hasBlockedThree","hasAliveTwo","hasBlockedTwo","cnt","left","right","cntArray","num","ChessBoard","boardMatrix","chessNum","humHeuristic","comHeuristic","neighborNum","humCloseNeighbor","comCloseNeighbor","zobrist","dir","outOfBound","updateNeighborAfterDo","updateHeuristicAfterDo","goUpdate","backup","oldType","restoreHeuristic","verticals","lineCoords","horizontals","diagonals","antidiagonals","coord","ux","uy","calcuLineHeuristic","calcuHeuristic","direction","score","ChessType","standardLine","standardizeLine","self","enermy","dullResult","hasNeighbor","fives","selfAliveFours","enermyAliveFours","selfBlockedFours","enermyBlockedFours","selfDoubleThrees","enermyDoubleThrees","selfAliveThrees","otherPositions","selfPosScore","heuristic","enermyPosScore","max","ascSortFunc","a","b","sort","comScore","evaluateOneSide","humScore","stdLine","str","closeNeighbor","k","INVALID_F","EXACT_F","LOWER_F","UPPER_F","TableCell","isValid","hashCode","fType","fValue","treeDepth","evaValid","evaluate","TABLE_SIZE","cells","getCell","setCell","MAX_FLOOR","MIN_FLOOR","dfs","board","alpha","beta","floorType","depth","hasX","hasY","hasType","isWin","getCode","isFull","evaValue","validCell","getNumber","emptyPosList","generatorKill","generator","hasPurning","backupHeuristic","put","childF","undo","Date","getTime","min","getBestPut","initStatus","longest","bestPut","console","log","getStatusStr","UNKNOWN_WIN","HUM_WIN","COM_WIN","DRAW","winStatus","isEnd","controlInit","reset","humanPlay","heuristicToString","neighborToString","getComputerPlay","components","GameBoard","InfoCard","SettingCard","grid","MyGrid","StatusInfo","chessNumber","init","emptyObj","$set","$refs","handleComputerPlay","comObj","infoCard","humObj","created","Vue","config","productionTip","render","App","$mount"],"mappings":"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","file":"js/app.307f346b.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = __webpack_public_path__ + \"img/board.5442f90f.jpg\";","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyGrid.vue?vue&type=style&index=0&id=66e5b9d2&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyGrid.vue?vue&type=style&index=0&id=66e5b9d2&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('grid',{scopedSlots:_vm._u([{key:\"board\",fn:function(){return [_c('game-boardObj',{ref:\"board\",attrs:{\"ui-board\":_vm.uiBoard,\"just-chess\":_vm.justChess,\"mask-on\":_vm.maskOn,\"playing\":_vm.playing,\"first-chess\":_vm.firstChess},on:{\"cell-click\":_vm.handleClick}})]},proxy:true},{key:\"card\",fn:function(){return [_c('info-card',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.playing),expression:\"playing\"}],ref:\"infoCard\"}),_c('setting-card',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.playing),expression:\"!playing\"}],on:{\"game-start\":_vm.handleStart}})]},proxy:true}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"outer\"},[_c('transition',{attrs:{\"name\":\"fade\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.msgMaskOn),expression:\"msgMaskOn\"}],staticClass:\"msg_mask\"},[_c('div',[_vm._v(_vm._s(_vm.message))])])]),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.maskOn),expression:\"maskOn\"}],staticClass:\"mask\"},[_c('div',{staticClass:\"text_box\"},[_c('div',{staticClass:\"calcu\"},[_vm._v(\"正在计算……\")]),_c('div',{staticClass:\"limit\"},[_vm._v(\"时限30秒\")])])])]),_c('div',{staticClass:\"inner\"},[_vm._m(0),_c('div',{staticClass:\"board_grid\"},_vm._l((_vm.cellArray),function(cell){return _c('div',{key:cell.id,staticClass:\"cell\",on:{\"click\":function($event){return _vm.handleClick(cell.x, cell.y)}}},[_c('div',{staticClass:\"chess\",class:{empty_chess: _vm.uiBoard[cell.id].chess === 0,\n                  black_chess: _vm.uiBoard[cell.id].chess === _vm.firstChess,\n                  white_chess: _vm.uiBoard[cell.id].chess === _vm.secondChess,\n                  just_chess: cell.id === _vm.justChess}},[_c('div',{staticClass:\"chess_number\"},[_vm._v(\" \"+_vm._s(_vm.uiBoard[cell.id].number != -1 ?_vm.uiBoard[cell.id].number :\"\")+\" \")])])])}),0)])],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"img_box\"},[_c('img',{staticClass:\"bg_img\",attrs:{\"src\":require(\"../assets/board.jpg\")}})])}]\n\nexport { render, staticRenderFns }","//棋盘上的棋子的类型\r\n\r\n/**空位置 */\r\nconst EMPTY_CHESS = 0;\r\n/**电脑棋子 */\r\nconst COM_CHESS = 1;\r\n/**人类棋子 */\r\nconst HUM_CHESS = 2;\r\n\r\nexport { EMPTY_CHESS, COM_CHESS, HUM_CHESS };","<template>\r\n  <div class=\"outer\">\r\n    <transition name=\"fade\">\r\n      <div class=\"msg_mask\" v-show=\"msgMaskOn\">\r\n        <div>{{message}}</div>\r\n      </div>\r\n    </transition>\r\n    <transition name=\"fade\">\r\n      <div class=\"mask\" v-show=\"maskOn\">\r\n        <div class=\"text_box\">\r\n          <div class=\"calcu\">正在计算……</div>\r\n          <div class=\"limit\">时限30秒</div>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n    <div class=\"inner\">\r\n      <div class=\"img_box\">\r\n        <img class=\"bg_img\" src=\"../assets/board.jpg\" />\r\n      </div>\r\n      <div class=\"board_grid\">\r\n        <div\r\n          v-for=\"cell in cellArray\"\r\n          :key=\"cell.id\"\r\n          class=\"cell\"\r\n          @click=\"handleClick(cell.x, cell.y)\"\r\n        >\r\n          <div\r\n            class=\"chess\"\r\n            :class=\"{empty_chess: uiBoard[cell.id].chess === 0,\r\n                    black_chess: uiBoard[cell.id].chess === firstChess,\r\n                    white_chess: uiBoard[cell.id].chess === secondChess,\r\n                    just_chess: cell.id === justChess}\"\r\n          >\r\n            <div class=\"chess_number\">\r\n              {{uiBoard[cell.id].number != -1\r\n              ?uiBoard[cell.id].number\r\n              :\"\"}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { COM_CHESS, HUM_CHESS } from \"../GameAlgo/ChessType.js\";\r\n\r\nexport default {\r\n  name: \"GameBoard\",\r\n  data: function() {\r\n    return {\r\n      /**带有编号的二维数组 */\r\n      cellArray: this.createArray(),\r\n      msgMaskOn: false,\r\n      message: \"no message\"\r\n    };\r\n  },\r\n  computed: {\r\n    secondChess() {\r\n      return this.firstChess === COM_CHESS ? HUM_CHESS : COM_CHESS;\r\n    }\r\n  },\r\n  props: {\r\n    /**控制UI界面的二维数组 */\r\n    uiBoard: Array,\r\n    justChess: {\r\n      type: Number,\r\n      default: -1\r\n    },\r\n    maskOn: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    playing: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    firstChess: {\r\n      type: Number,\r\n      default: HUM_CHESS\r\n    }\r\n  },\r\n  methods: {\r\n    /**生成带有编号的二维数组 */\r\n    createArray() {\r\n      let array = [];\r\n      for (let x = 0; x < 15; x++) {\r\n        for (let y = 0; y < 15; y++) {\r\n          array.push({ x: x, y: y, id: x * 15 + y });\r\n        }\r\n      }\r\n      return array;\r\n    },\r\n    /**抛出`cell-click`事件 */\r\n    handleClick(x, y) {\r\n      if (this.playing) {\r\n        this.$emit(\"cell-click\", x, y);\r\n      }\r\n    },\r\n    showMsg(msgString) {\r\n      this.message = msgString;\r\n      this.msgMaskOn = true;\r\n      setTimeout(() => {\r\n        this.msgMaskOn = false;\r\n      }, 2000);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.outer {\r\n  padding-bottom: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 2px 20px 3px rgba(68, 84, 106, 0.227);\r\n}\r\n.mask {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 10;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  display: grid;\r\n  grid-template-columns: 100%;\r\n  justify-items: center;\r\n  align-items: center;\r\n}\r\n.msg_mask {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 20;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  display: grid;\r\n  grid-template-columns: 100%;\r\n  justify-items: center;\r\n  align-items: center;\r\n  color: white;\r\n  font-size: 40px;\r\n  font-weight: bold;\r\n}\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.3s;\r\n}\r\n.fade-enter,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n.text_box {\r\n  color: white;\r\n  display: grid;\r\n  grid-template-columns: 100%;\r\n  justify-items: center;\r\n  align-items: center;\r\n}\r\n.calcu {\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  padding: 10px;\r\n}\r\n.limit {\r\n  font-size: 20px;\r\n  text-align: center;\r\n  padding: 5px;\r\n}\r\n.inner {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 5;\r\n}\r\n.img_box {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1;\r\n  overflow: hidden;\r\n}\r\n.bg_img {\r\n  position: relative;\r\n  width: 102%;\r\n  height: 102%;\r\n  top: -1%;\r\n  left: -1%;\r\n  right: -1%;\r\n  bottom: -1%;\r\n}\r\n.board_grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(15, 1fr);\r\n  grid-template-rows: repeat(15, 1fr);\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 10;\r\n}\r\n.cell {\r\n  /* background-color: lightblue; */\r\n  background-color: rgba(255, 255, 255, 0);\r\n  /* border: 1px solid gray; */\r\n  padding: 10%;\r\n}\r\n.chess {\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  display: grid;\r\n  grid-template-columns: 100%;\r\n  align-items: center;\r\n  justify-items: center;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n}\r\n.chess_number {\r\n  font-size: 12px;\r\n  text-align: center;\r\n  overflow: hidden;\r\n}\r\n.white_chess {\r\n  background-color: white;\r\n  color: black;\r\n  border: 1px solid black;\r\n}\r\n.black_chess {\r\n  background-color: black;\r\n  color: white;\r\n  border: 1px solid white;\r\n}\r\n.no_chess {\r\n  background-color: rgba(255, 255, 255, 0);\r\n}\r\n.just_chess {\r\n  box-shadow: 0px 0px 10px 2px lightcoral;\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GameBoard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GameBoard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GameBoard.vue?vue&type=template&id=521b3a22&scoped=true&\"\nimport script from \"./GameBoard.vue?vue&type=script&lang=js&\"\nexport * from \"./GameBoard.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GameBoard.vue?vue&type=style&index=0&id=521b3a22&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"521b3a22\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my_grid\"},[_vm._t(\"board\"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('div',[_vm._t(\"card\")],2)])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"my_grid\">\r\n    <slot name=\"board\"></slot>\r\n    <transition name=\"fade\">\r\n      <div>\r\n        <slot name=\"card\"></slot>\r\n      </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"MyGrid\"\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.my_grid {\r\n  display: grid;\r\n  gap: 30px;\r\n  transition: 0.5s;\r\n}\r\n@media screen and (min-width: 801px) {\r\n  .my_grid {\r\n    grid-template-columns: 1fr 1fr;\r\n    margin: 50px;\r\n  }\r\n}\r\n@media screen and (min-width: 501px) and (max-width: 800px) {\r\n  .my_grid {\r\n    grid-template-columns: 100%;\r\n    grid-template-rows: auto auto;\r\n    gap: 20px;\r\n    margin: 20px;\r\n  }\r\n}\r\n@media screen and (max-width: 500px){\r\n  .my_grid{\r\n    grid-template-columns: 100%;\r\n    grid-template-rows: auto auto;\r\n    gap: 10px;\r\n    margin: 10px;\r\n  }\r\n}\r\n\r\n.fade-enter-active,\r\n.fade-leave-active {\r\n  transition: opacity 0.5s;\r\n}\r\n.fade-enter,\r\n.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyGrid.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyGrid.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MyGrid.vue?vue&type=template&id=66e5b9d2&scoped=true&\"\nimport script from \"./MyGrid.vue?vue&type=script&lang=js&\"\nexport * from \"./MyGrid.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MyGrid.vue?vue&type=style&index=0&id=66e5b9d2&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"66e5b9d2\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card\"},[_c('p',[_vm._v(\"最大搜索深度：\"+_vm._s(_vm.goMaxDepth))]),_c('p',[_vm._v(\"考察结点总数：\"+_vm._s(_vm.nodeNum)+\"；叶子结点个数：\"+_vm._s(_vm.numOfLeaf))]),_c('p',[_vm._v(\"用时：\"+_vm._s(_vm.timeUsed)+\"秒；超时：\"+_vm._s(_vm.isOutTime))]),_c('p',[_vm._v(\"a-b 剪枝次数：\"+_vm._s(_vm.ABPruning))]),_c('p',[_vm._v(\"回传 f 值：\"+_vm._s(_vm.f))]),_c('p',[_vm._v(\"置换表命中总次数：\"+_vm._s(_vm.sumMatch))]),_c('p',[_vm._v(\"完全命中：\"+_vm._s(_vm.completeMatch)+\"；部分命中：\"+_vm._s(_vm.partialMatch)+\"；叶子结点命中：\"+_vm._s(_vm.leafMatch))])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","let Status = {\r\n    /** 搜索开始的时间 */\r\n    startTime: 0,\r\n    /** 本轮搜索是否超时 */\r\n    isOutTime: false,\r\n    /** 本轮搜索去到的最大深度 */\r\n    goMaxDepth: 0,\r\n    /**根节点搜索某个空位去到的最大深度 */\r\n    posDepth: 0,\r\n    /** 本轮搜索考察过的结点总数 */\r\n    nodeNum: 0,\r\n    /** 叶子结点个数 */\r\n    leafNum: 0,\r\n    /**输赢局面个数 */\r\n    winNum: 0,\r\n    /** 完全命中 */\r\n    completeMatch: 0,\r\n    /** 部分命中 */\r\n    partialMatch: 0,\r\n    /** 叶子结点命中 */\r\n    leafMatch: 0,\r\n    /** ab剪枝次数 */\r\n    ABPruning: 0,\r\n    /**回传f值 */\r\n    f: 0\r\n};\r\nexport default Status;","<template>\r\n  <div class=\"card\">\r\n    <p>最大搜索深度：{{goMaxDepth}}</p>\r\n    <p>考察结点总数：{{nodeNum}}；叶子结点个数：{{numOfLeaf}}</p>\r\n    <p>用时：{{timeUsed}}秒；超时：{{isOutTime}}</p>\r\n    <p>a-b 剪枝次数：{{ABPruning}}</p>\r\n    <p>回传 f 值：{{f}}</p>\r\n    <p>置换表命中总次数：{{sumMatch}}</p>\r\n    <p>完全命中：{{completeMatch}}；部分命中：{{partialMatch}}；叶子结点命中：{{leafMatch}}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Status from \"../GameAlgo/Status.js\";\r\nexport default {\r\n  name: \"InfoCard\",\r\n  data: function() {\r\n    return {\r\n      goMaxDepth: 0,\r\n      nodeNum: 0,\r\n      numOfLeaf: 0,\r\n      completeMatch: 0,\r\n      partialMatch: 0,\r\n      leafMatch: 0,\r\n      sumMatch: 0,\r\n      ABPruning: 0,\r\n      timeUsed: 0,\r\n      isOutTime: false,\r\n      f: 0\r\n    };\r\n  },\r\n  methods: {\r\n    update() {\r\n      this.goMaxDepth = Status.goMaxDepth;\r\n      this.nodeNum = Status.nodeNum;\r\n      this.numOfLeaf = Status.leafNum + Status.winNum;\r\n      this.completeMatch = Status.completeMatch;\r\n      this.partialMatch = Status.partialMatch;\r\n      this.leafMatch = Status.leafMatch;\r\n      this.sumMatch = this.completeMatch + this.partialMatch + this.leafMatch;\r\n      this.ABPruning = Status.ABPruning;\r\n      this.timeUsed = Math.round(\r\n        (new Date().getTime() - Status.startTime) / 1000\r\n      );\r\n      this.isOutTime = Status.isOutTime;\r\n      this.f = Status.f;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  background-color: antiquewhite;\r\n  box-shadow: 0px 2px 20px 3px rgba(68, 84, 106, 0.227);\r\n  padding: 20px 20px;\r\n  border-radius: 10px;\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InfoCard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InfoCard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./InfoCard.vue?vue&type=template&id=e63cbf3a&scoped=true&\"\nimport script from \"./InfoCard.vue?vue&type=script&lang=js&\"\nexport * from \"./InfoCard.vue?vue&type=script&lang=js&\"\nimport style0 from \"./InfoCard.vue?vue&type=style&index=0&id=e63cbf3a&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e63cbf3a\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"row\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.firstSide),expression:\"firstSide\"}],attrs:{\"type\":\"radio\",\"name\":\"who_first\",\"id\":\"com_first\",\"value\":\"com_first\"},domProps:{\"checked\":_vm._q(_vm.firstSide,\"com_first\")},on:{\"change\":function($event){_vm.firstSide=\"com_first\"}}}),_c('label',{attrs:{\"for\":\"com_first\"}},[_vm._v(\"电脑先走\")])]),_c('div',{staticClass:\"row\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.firstSide),expression:\"firstSide\"}],attrs:{\"type\":\"radio\",\"name\":\"who_first\",\"id\":\"hum_first\",\"value\":\"hum_first\"},domProps:{\"checked\":_vm._q(_vm.firstSide,\"hum_first\")},on:{\"change\":function($event){_vm.firstSide=\"hum_first\"}}}),_c('label',{attrs:{\"for\":\"hum_first\"}},[_vm._v(\"你先走\")])]),_c('div',{staticClass:\"line\"}),_c('div',{staticClass:\"row\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.useHeuristic),expression:\"useHeuristic\"}],attrs:{\"type\":\"checkbox\",\"id\":\"use_heuristic\"},domProps:{\"checked\":Array.isArray(_vm.useHeuristic)?_vm._i(_vm.useHeuristic,null)>-1:(_vm.useHeuristic)},on:{\"change\":function($event){var $$a=_vm.useHeuristic,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.useHeuristic=$$a.concat([$$v]))}else{$$i>-1&&(_vm.useHeuristic=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.useHeuristic=$$c}}}}),_c('label',{attrs:{\"for\":\"use_heuristic\"}},[_vm._v(\"使用启发式搜索\")])]),_c('div',{staticClass:\"row\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.useTransTable),expression:\"useTransTable\"}],attrs:{\"type\":\"checkbox\",\"id\":\"use_transtable\"},domProps:{\"checked\":Array.isArray(_vm.useTransTable)?_vm._i(_vm.useTransTable,null)>-1:(_vm.useTransTable)},on:{\"change\":function($event){var $$a=_vm.useTransTable,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.useTransTable=$$a.concat([$$v]))}else{$$i>-1&&(_vm.useTransTable=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.useTransTable=$$c}}}}),_c('label',{attrs:{\"for\":\"use_transtable\"}},[_vm._v(\"使用置换表\")])]),_c('div',{staticStyle:{\"width\":\"100%\"}},[_c('button',{staticClass:\"button\",on:{\"click\":_vm.startGame}},[_vm._v(\"开始\")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//相关参数配置\r\nlet Config = {\r\n    /** 棋盘边长 */\r\n    BOARD_SIZE: 15,\r\n    /** 最大搜索空格数 */\r\n    MAX_EMPTY_NUM: 10,\r\n    /** 第几层开始算杀 */\r\n    START_KILLER: 4,\r\n    /** 最大搜索深度 */\r\n    MAX_DEPTH: 8,\r\n    /** 最长搜索时间 */\r\n    MAX_TIME: 30 * 1000,\r\n    /** 己方近邻系数 */\r\n    CLOSE_RADIUS: 0.05,\r\n    CALC_LINE_ALGO: 2,\r\n    /**开启置换表优化 */\r\n    useTransTable: true,\r\n    /**使用启发函数优化 */\r\n    useHeuristic: true\r\n};\r\nexport default Config;","<template>\r\n  <div class=\"card\">\r\n    <div class=\"row\">\r\n      <input type=\"radio\" name=\"who_first\" id=\"com_first\" value=\"com_first\" v-model=\"firstSide\" />\r\n      <label for=\"com_first\">电脑先走</label>\r\n    </div>\r\n    <div class=\"row\">\r\n      <input type=\"radio\" name=\"who_first\" id=\"hum_first\" value=\"hum_first\" v-model=\"firstSide\" />\r\n      <label for=\"hum_first\">你先走</label>\r\n    </div>\r\n    <div class=\"line\"></div>\r\n    <div class=\"row\">\r\n      <input type=\"checkbox\" id=\"use_heuristic\" v-model=\"useHeuristic\" />\r\n      <label for=\"use_heuristic\">使用启发式搜索</label>\r\n    </div>\r\n    <div class=\"row\">\r\n      <input type=\"checkbox\" id=\"use_transtable\" v-model=\"useTransTable\" />\r\n      <label for=\"use_transtable\">使用置换表</label>\r\n    </div>\r\n    <div style=\"width:100%\">\r\n    <button class=\"button\" @click=\"startGame\">开始</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Config from \"../GameAlgo/Config.js\";\r\nimport { COM_CHESS, HUM_CHESS } from \"../GameAlgo/ChessType.js\";\r\n\r\nexport default {\r\n  name: \"SettingCard\",\r\n  data: function() {\r\n    return {\r\n      firstSide: \"com_first\",\r\n      useHeuristic: true,\r\n      useTransTable: true\r\n    };\r\n  },\r\n  methods: {\r\n    startGame() {\r\n      Config.useHeuristic = this.useHeuristic;\r\n      Config.useTransTable = this.useTransTable;\r\n      let firstChess = this.firstSide === \"com_first\" ? COM_CHESS : HUM_CHESS;\r\n      this.$emit(\"game-start\", firstChess);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  background-color: antiquewhite;\r\n  box-shadow: 0px 2px 20px 3px rgba(68, 84, 106, 0.227);\r\n  padding: 20px 20px;\r\n  border-radius: 10px;\r\n}\r\n.row {\r\n  margin-bottom: 10px;\r\n}\r\n.line{\r\n  width: 100%;\r\n  height: 1.5px;\r\n  background-color: grey;\r\n  margin: 10px 0px;\r\n}\r\n.button {\r\n  display: inline-block;\r\n  color: white;\r\n  background-color: #ff8f00;\r\n  box-shadow: 0px 1px 5px 1px rgba(0, 0, 0, 0.2);\r\n  border-radius: 5px;\r\n  border: 0px solid;\r\n  outline: none;\r\n  padding: 10px 10px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n  width: 100px;\r\n  margin: 10px 0 0 0;\r\n  transition: 0.3s;\r\n}\r\n.button:hover{\r\n  background-color: #fab965;\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SettingCard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SettingCard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SettingCard.vue?vue&type=template&id=a98acc88&scoped=true&\"\nimport script from \"./SettingCard.vue?vue&type=script&lang=js&\"\nexport * from \"./SettingCard.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SettingCard.vue?vue&type=style&index=0&id=a98acc88&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a98acc88\",\n  null\n  \n)\n\nexport default component.exports","let array = {\r\n    /**\r\n     * 创建多维数组并初始化为0\r\n     * \r\n     * @param {Number} l1 第1维长度\r\n     * @param {Number} l2 第2维长度\r\n     * @param {Number} l3 第3维长度\r\n     * \r\n     * @returns {Number[]|Number[][]|Number[][][]} 多维数组\r\n     */\r\n    create: function (l1, l2, l3) {\r\n        if (arguments.length === 1) {\r\n            let arr = new Array(l1);\r\n            arr.fill(0, 0, l1);\r\n            return arr;\r\n        } else if (arguments.length === 2) {\r\n            let arr = new Array(l1);\r\n            for (let i = 0; i < l1; i++) {\r\n                arr[i] = this.create(l2);\r\n            }\r\n            return arr;\r\n        } else {\r\n            let arr = new Array(l1);\r\n            for (let i = 0; i < l1; i++) {\r\n                arr[i] = this.create(l2, l3);\r\n            }\r\n            return arr;\r\n        }\r\n    }\r\n}\r\nexport default array;","import Config from \"./Config.js\";\r\nimport { COM_CHESS, HUM_CHESS } from \"./ChessType.js\";\r\n\r\nfunction randomNum() {\r\n    return Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\r\n}\r\n\r\n/**\r\n * Zobrist\r\n */\r\nexport default class Zobrist {\r\n    /**\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        /**\r\n         * 空位状态\r\n         * @type Number[]\r\n         */\r\n        this.empty = [];\r\n        /**\r\n         * 人类棋子状态\r\n         * @type Number[]\r\n         */\r\n        this.hum = [];\r\n        /**\r\n         * 电脑棋子状态\r\n         * @type Number[]\r\n         */\r\n        this.com = [];\r\n        /**\r\n         * 哈希值\r\n         * @type Number\r\n         */\r\n        this.zobristCode = 0;\r\n\r\n        for (let i = 0; i < Config.BOARD_SIZE * Config.BOARD_SIZE; i++) {\r\n            this.empty.push(randomNum());\r\n            this.hum.push(randomNum());\r\n            this.com.push(randomNum());\r\n        }\r\n        for (let i = 0; i < Config.BOARD_SIZE * Config.BOARD_SIZE; i++) {\r\n            this.zobristCode ^= this.empty[i];\r\n        }\r\n    }\r\n    /**\r\n     * 落子或撤销后更新哈希值\r\n     * \r\n     * @param {Number} x 行号\r\n     * @param {Number} y 列号\r\n     * @param {Number} oldChess 旧棋子类型\r\n     * @param {Number} newChess 新棋子类型\r\n     */\r\n    goUpdate(x, y, oldChess, newChess) {\r\n        let index = x * Config.BOARD_SIZE + y;\r\n        let oldArray, newArray;\r\n        if (oldChess === HUM_CHESS) {\r\n            oldArray = this.hum;\r\n        } else if (oldChess === COM_CHESS) {\r\n            oldArray = this.com;\r\n        } else {\r\n            oldArray = this.empty;\r\n        }\r\n        if (newChess === HUM_CHESS) {\r\n            newArray = this.hum;\r\n        } else if (newChess === COM_CHESS) {\r\n            newArray = this.com;\r\n        } else {\r\n            newArray = this.empty;\r\n        }\r\n        this.zobristCode ^= oldArray[index];\r\n        this.zobristCode ^= newArray[index];\r\n    }\r\n}","let Direction = {\r\n    /** 竖直方向 */\r\n    VERTICAL: 0,\r\n    /** 水平方向 */\r\n    HORIZONTAL: 1,\r\n    /** 对角线方向 */\r\n    DIAGONAL: 2,\r\n    /** 反对角线方向 */\r\n    ANTIDIAGONAL: 3\r\n}\r\nexport default Direction;","/**\r\n * 坐标类\r\n */\r\nexport default class Coord {\r\n    /**\r\n     * @constructor\r\n     * @param {Number} [x=0] 行号\r\n     * @param {Number} [y=0] 列号\r\n     * @param {Number} [h] 分数\r\n     */\r\n    constructor(x = 0, y = 0, h) {\r\n        /**坐标行号 */\r\n        this.x = x;\r\n        /**坐标列号 */\r\n        this.y = y;\r\n        /**分数 */\r\n        this.h = h;\r\n    }\r\n}","import array from \"./MyArray.js\";\r\n//import Coord from \"./Coord.js\";\r\n\r\n/**\r\n * 米字形备份\r\n */\r\nexport default class MiBackup {\r\n    /**\r\n     * 构造函数，创建出数组\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        /**\r\n         * 坐标数组，4 * 9 = 36\r\n         * \r\n         * @type Coord[]\r\n         */\r\n        this.coords = [];\r\n        /**\r\n         * 人类启发函数，每个位置有4个维度\r\n         * \r\n         * hum[36][4]\r\n         * \r\n         * @type Number[][]\r\n         */\r\n        this.hum = array.create(36, 4);\r\n        /**\r\n         * 电脑启发函数，每个位置有4个维度\r\n         * \r\n         * com[36][4]\r\n         * \r\n         * @type Number[][]\r\n         */\r\n        this.com = array.create(36,4);\r\n    }\r\n}","/** 空位 */\r\nconst EMPTY = 0;\r\n/** 己方棋子 */\r\nconst SELF = 1;\r\n/** 非法位置或被敌方阻塞 */\r\nconst BLOCKED = 2;\r\n\r\nexport { EMPTY, SELF, BLOCKED };","//各棋形的分数\r\nlet Score = {\r\n    /** 连五 */\r\n    FIVE: 1e7,\r\n    /** 活四 */\r\n    ALIVE_FOUR: 1e5,\r\n    /** 死四 */\r\n    BLOCKED_FOUR: 1e4,\r\n    /** 活三 */\r\n    ALIVE_THREE: 1e3,\r\n    /** 死三 */\r\n    BLOCKED_THREE: 1e2,\r\n    /** 活二 */\r\n    ALIVE_TWO: 20,\r\n    /** 死二 */\r\n    BLOCKED_TWO: 2,\r\n    /** 无穷值表示胜利 */\r\n    INF: 1e9\r\n}\r\nexport default Score;","import array from \"./MyArray.js\";\r\nimport { EMPTY, SELF } from \"./StandardType.js\";\r\nimport Score from \"./Score.js\";\r\nimport Config from \"./Config.js\";\r\n\r\n/**\r\n * 己方棋子个数前缀和\r\n * @type Number[]\r\n */\r\nlet selfCnt = array.create(11);\r\n/**\r\n * 空格个数前缀和\r\n * @type Number[]\r\n */\r\nlet emptyCnt = array.create(11);\r\n/**\r\n * 阻塞个数前缀和\r\n * @type Number[]\r\n */\r\nlet blockedCnt = array.create(11);\r\n/**\r\n * 计算长度为9+2的单条标准直线的得分\r\n * \r\n * @param {Number[]} line 标准的直线，长度为9+2\r\n * \r\n * @returns {Number} 这条直线的得分\r\n */\r\nfunction scoreLine(line) {\r\n    calcuArray(line);\r\n\r\n    if (Config.CALC_LINE_ALGO === 1) {\r\n        let sum = 0;\r\n        let fiveScore = fiveNum(line) * Score.FIVE;\r\n        sum += fiveScore;\r\n        if (fiveScore > 0) {\r\n            return sum;\r\n        }\r\n        let aliveFourScore = aliveFourNum(line) * Score.ALIVE_FOUR;\r\n        sum += aliveFourScore;\r\n        if (aliveFourScore === 0) {\r\n            sum += blockedFourNum(line) * Score.BLOCKED_FOUR;\r\n        }\r\n        let aliveThreeScore = aliveThreeNum(line) * Score.ALIVE_THREE;\r\n        sum += aliveThreeScore;\r\n        if (aliveThreeScore === 0) {\r\n            sum += blockedThreeNum(line) * Score.BLOCKED_THREE;\r\n        }\r\n        let aliveTwoScore = aliveTwoNum(line) * Score.ALIVE_TWO;\r\n        sum += aliveTwoScore;\r\n        if (aliveTwoScore === 0) {\r\n            sum += blockedTwoNum(line) * Score.BLOCKED_TWO;\r\n        }\r\n        return sum;\r\n    } else {\r\n        if (hasFive(line)) {\r\n            return Score.FIVE;\r\n        } else if (hasAliveFour(line)) {\r\n            return Score.ALIVE_FOUR;\r\n        } else if (hasBlockedFour(line)) {\r\n            return Score.BLOCKED_FOUR;\r\n        } else if (hasAliveThree(line)) {\r\n            return Score.ALIVE_THREE;\r\n        } else if (hasBlockedThree(line)) {\r\n            return Score.BLOCKED_THREE;\r\n        } else if (hasAliveTwo(line)) {\r\n            return Score.ALIVE_TWO;\r\n        } else if (hasBlockedTwo(line)) {\r\n            return Score.BLOCKED_TWO;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 计算出现次数的前缀和\r\n * \r\n * @param {Number[]} line 标准化直线\r\n */\r\nfunction calcuArray(line) {\r\n    selfCnt[0] = emptyCnt[0] = blockedCnt[0] = 0;\r\n    if (line[0] === SELF) {\r\n        selfCnt[0] = 1;\r\n    } else if (line[0] === EMPTY) {\r\n        emptyCnt[0] = 1;\r\n    } else {\r\n        blockedCnt[0] = 1;\r\n    }\r\n    for (let i = 1; i < line.length; i++) {\r\n        if (line[i] === SELF) {\r\n            selfCnt[i] = selfCnt[i - 1] + 1;\r\n            emptyCnt[i] = emptyCnt[i - 1];\r\n            blockedCnt[i] = blockedCnt[i - 1];\r\n        } else if (line[i] === EMPTY) {\r\n            emptyCnt[i] = emptyCnt[i - 1] + 1;\r\n            selfCnt[i] = selfCnt[i - 1];\r\n            blockedCnt[i] = blockedCnt[i - 1];\r\n        } else {\r\n            blockedCnt[i] = blockedCnt[i - 1] + 1;\r\n            selfCnt[i] = selfCnt[i - 1];\r\n            emptyCnt[i] = emptyCnt[i - 1];\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 闭区间[left, right]内type的出现次数\r\n * \r\n * @param {Number} left 区间左端点\r\n * @param {Number} right 区间右端点\r\n * @param {Number} type 标准棋子类型\r\n * \r\n * @returns {Number} 出现次数\r\n */\r\nfunction cnt(left, right, type) {\r\n    let cntArray;\r\n    if (type === SELF) {\r\n        cntArray = selfCnt;\r\n    } else if (type === EMPTY) {\r\n        cntArray = emptyCnt;\r\n    } else {\r\n        cntArray = blockedCnt;\r\n    }\r\n    if (left === 0) {\r\n        return cntArray[right];\r\n    } else {\r\n        return cntArray[right] - cntArray[left - 1];\r\n    }\r\n}\r\n\r\n/**\r\n * 计算连五的个数\r\n * @param {Number[]} line 标准化直线\r\n * @returns {Number} 连五的个数\r\n */\r\nfunction fiveNum(line) {\r\n    let num = 0;\r\n    let left, right;\r\n    for (left = 0; left + 5 - 1 < line.length; left++) {\r\n        right = left + 5 - 1;\r\n        if (cnt(left, right, SELF) === 5) {\r\n            num++;\r\n        }\r\n    }\r\n    return num;\r\n}\r\n\r\nfunction hasFive(line) {\r\n    let left, right;\r\n    for (left = 0; left + 5 - 1 < line.length; left++) {\r\n        right = left + 5 - 1;\r\n        if (cnt(left, right, SELF) === 5) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * 计算活四的个数\r\n * @param {Number[]} line 标准化直线\r\n * @returns {Number} 活四的个数\r\n */\r\nfunction aliveFourNum(line) {\r\n    let num = 0;\r\n    // 6个一组，两头0，4个1，2个0\r\n    let left, right;\r\n    for (left = 0; left + 6 - 1 < line.length; left++) {\r\n        right = left + 6 - 1;\r\n        if (line[left] === 0 && line[right] === 0 && cnt(left, right, SELF) === 4\r\n            && cnt(left, right, EMPTY) === 2) {\r\n            num++;\r\n        }\r\n    }\r\n    return num;\r\n}\r\n\r\nfunction hasAliveFour(line) {\r\n    // 6个一组，两头0，4个1，2个0\r\n    let left, right;\r\n    for (left = 0; left + 6 - 1 < line.length; left++) {\r\n        right = left + 6 - 1;\r\n        if (line[left] === 0 && line[right] === 0 && cnt(left, right, SELF) === 4\r\n            && cnt(left, right, EMPTY) === 2) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * 计算死四的个数\r\n * @param {Number[]} line 标准化直线\r\n * @returns {Number} 死四的个数\r\n */\r\nfunction blockedFourNum(line) {\r\n    let num = 0;\r\n    // 5个一组，4个1，1个0\r\n    let left, right;\r\n    for (left = 0; left + 5 - 1 < line.length; left++) {\r\n        right = left + 5 - 1;\r\n        if (cnt(left, right, SELF) === 4 && cnt(left, right, EMPTY) === 1) {\r\n            num++;\r\n        }\r\n    }\r\n    return num;\r\n}\r\n\r\nfunction hasBlockedFour(line) {\r\n    // 5个一组，4个1，1个0\r\n    let left, right;\r\n    for (left = 0; left + 5 - 1 < line.length; left++) {\r\n        right = left + 5 - 1;\r\n        if (cnt(left, right, SELF) === 4 && cnt(left, right, EMPTY) === 1) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * 计算活三的个数\r\n * @param {Number[]} line 标准化直线\r\n * @returns {Number} 活三的个数\r\n */\r\nfunction aliveThreeNum(line) {\r\n    let num = 0;\r\n    // 6个一组，两头0，3个1，3个0\r\n    let left, right;\r\n    for (left = 0; left + 6 - 1 < line.length; left++) {\r\n        right = left + 6 - 1;\r\n        if (line[left] === 0 && line[right] === 0 && cnt(left, right, SELF) === 3\r\n            && cnt(left, right, EMPTY) === 3) {\r\n            num++;\r\n        }\r\n    }\r\n    return num;\r\n}\r\n\r\nfunction hasAliveThree(line) {\r\n    // 6个一组，两头0，3个1，3个0\r\n    let left, right;\r\n    for (left = 0; left + 6 - 1 < line.length; left++) {\r\n        right = left + 6 - 1;\r\n        if (line[left] === 0 && line[right] === 0 && cnt(left, right, SELF) === 3\r\n            && cnt(left, right, EMPTY) === 3) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * 计算死三的个数\r\n * @param {Number[]} line 标准化直线\r\n * @returns {Number} 死三的个数\r\n */\r\nfunction blockedThreeNum(line) {\r\n    let num = 0;\r\n    // 5个一组，3个1，2个0\r\n    let left, right;\r\n    for (left = 0; left + 5 - 1 < line.length; left++) {\r\n        right = left + 5 - 1;\r\n        if (cnt(left, right, SELF) === 3 && cnt(left, right, EMPTY) === 2) {\r\n            num++;\r\n        }\r\n    }\r\n    return num;\r\n}\r\n\r\nfunction hasBlockedThree(line) {\r\n    // 5个一组，3个1，2个0\r\n    let left, right;\r\n    for (left = 0; left + 5 - 1 < line.length; left++) {\r\n        right = left + 5 - 1;\r\n        if (cnt(left, right, SELF) === 3 && cnt(left, right, EMPTY) === 2) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * 计算活二的个数\r\n * @param {Number[]} line 标准化直线\r\n * @returns {Number} 活二的个数\r\n */\r\nfunction aliveTwoNum(line) {\r\n    let num = 0;\r\n    // 6个一组，两头0，2个1，4个0\r\n    let left, right;\r\n    for (left = 0; left + 6 - 1 < line.length; left++) {\r\n        right = left + 6 - 1;\r\n        if (line[left] === 0 && line[right] === 0 && cnt(left, right, SELF) === 2\r\n            && cnt(left, right, EMPTY) === 4) {\r\n            num++;\r\n        }\r\n    }\r\n    return num;\r\n}\r\n\r\nfunction hasAliveTwo(line) {\r\n    // 6个一组，两头0，2个1，4个0\r\n    let left, right;\r\n    for (left = 0; left + 6 - 1 < line.length; left++) {\r\n        right = left + 6 - 1;\r\n        if (line[left] === 0 && line[right] === 0 && cnt(left, right, SELF) === 2\r\n            && cnt(left, right, EMPTY) === 4) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * 计算死二的个数\r\n * @param {Number[]} line 标准化直线\r\n * @returns {Number} 死二的个数\r\n */\r\nfunction blockedTwoNum(line) {\r\n    let num = 0;\r\n    // 5个一组，2个1，3个0\r\n    let left, right;\r\n    for (left = 0; left + 5 - 1 < line.length; left++) {\r\n        right = left + 5 - 1;\r\n        if (cnt(left, right, SELF) === 2 && cnt(left, right, EMPTY) === 3) {\r\n            num++;\r\n        }\r\n    }\r\n    return num;\r\n}\r\n\r\nfunction hasBlockedTwo(line) {\r\n    // 5个一组，2个1，3个0\r\n    let left, right;\r\n    for (left = 0; left + 5 - 1 < line.length; left++) {\r\n        right = left + 5 - 1;\r\n        if (cnt(left, right, SELF) === 2 && cnt(left, right, EMPTY) === 3) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport default scoreLine;","import { EMPTY_CHESS, COM_CHESS, HUM_CHESS } from \"./ChessType.js\";\r\nimport Config from \"./Config.js\";\r\nimport array from \"./MyArray.js\";\r\nimport Zobrist from \"./Zobrist.js\";\r\nimport Direction from \"./Direction.js\";\r\nimport Coord from \"./Coord.js\";\r\nimport MiBackup from \"./MiBackup.js\";\r\nimport scoreLine from \"./ScoreCalculator.js\";\r\nimport { EMPTY, SELF, BLOCKED } from \"./StandardType.js\";\r\nimport Score from \"./Score.js\";\r\n\r\nexport default class ChessBoard {\r\n    /**\r\n     * 构造函数\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        /**\r\n         * 棋盘矩阵 Number[15][15]\r\n         * @type Number[][]\r\n         */\r\n        this.boardMatrix = array.create(Config.BOARD_SIZE, Config.BOARD_SIZE);\r\n        /**\r\n         * 棋子总数 \r\n         * @type Number\r\n         */\r\n        this.chessNum = 0;\r\n        /**\r\n         * 人类的空位分值 Number[15][15][4]\r\n         * @type Number[][][]\r\n         */\r\n        this.humHeuristic = array.create(Config.BOARD_SIZE, Config.BOARD_SIZE, 4);\r\n        /**\r\n         * 电脑的空位分值 Number[15][15][4]\r\n         * @type Number[][][]\r\n         */\r\n        this.comHeuristic = array.create(Config.BOARD_SIZE, Config.BOARD_SIZE, 4);\r\n        /**\r\n         * 位置附近棋子的总数 Number[15][15] \r\n         * @type Number[][] \r\n         */\r\n        this.neighborNum = array.create(Config.BOARD_SIZE, Config.BOARD_SIZE);\r\n        /**\r\n         * 位置近邻人类棋子数量 Number[15][15]\r\n         * @type Number[][]\r\n         */\r\n        this.humCloseNeighbor = array.create(Config.BOARD_SIZE, Config.BOARD_SIZE);\r\n        /**\r\n         * 位置近邻电脑棋子数量 Number[15][15]\r\n         * @type Number[][]\r\n         */\r\n        this.comCloseNeighbor = array.create(Config.BOARD_SIZE, Config.BOARD_SIZE);\r\n        /**\r\n         * Zobrist对象\r\n         * @type Zobrist\r\n         */\r\n        this.zobrist = new Zobrist();\r\n    }\r\n\r\n    /**\r\n     * 棋盘清零 \r\n     */\r\n    reset() {\r\n        this.chessNum = 0;\r\n        for (let x = 0; x < Config.BOARD_SIZE; x++) {\r\n            for (let y = 0; y < Config.BOARD_SIZE; y++) {\r\n                this.boardMatrix[x][y] = EMPTY_CHESS;\r\n                this.humCloseNeighbor[x][y] = 0;\r\n                this.comCloseNeighbor[x][y] = 0;\r\n                this.neighborNum[x][y] = 0;\r\n                for (let dir = 0; dir < 4; dir++) {\r\n                    this.humHeuristic[x][y][dir] = 0;\r\n                    this.comHeuristic[x][y][dir] = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 落子并更新相应的数据\r\n     * \r\n     * @param {Number} x 落子的行号\r\n     * @param {Number} y 落子的列号\r\n     * @param {Number} type 落子的类型\r\n     * \r\n     * @returns {Boolean} 操作是否合法\r\n     */\r\n    put(x, y, type) {\r\n        if (ChessBoard.outOfBound(x, y)) {\r\n            return false;\r\n        }\r\n        if (this.boardMatrix[x][y] != EMPTY_CHESS) {\r\n            return false;\r\n        }\r\n        this.boardMatrix[x][y] = type;\r\n        this.chessNum++;// 更新棋子总数\r\n        this.updateNeighborAfterDo(x, y, EMPTY_CHESS); // 更新邻居矩阵\r\n        this.updateHeuristicAfterDo(x, y); // 更新启发函数矩阵\r\n        this.zobrist.goUpdate(x, y, EMPTY_CHESS, type);// 更新哈希值\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 撤销棋子并更新相应的数据\r\n     * \r\n     * @param {Number} x 行号\r\n     * @param {Number} y 列号\r\n     * @param {MiBackup} backup 米字位置启发函数备份\r\n     * \r\n     * @returns {Boolean} 操作是否合法\r\n     */\r\n    undo(x, y, backup) {\r\n        if (ChessBoard.outOfBound(x, y)) {\r\n            return false;\r\n        }\r\n        if (this.boardMatrix[x][y] === EMPTY_CHESS) {\r\n            return false;\r\n        }\r\n        let oldType = this.boardMatrix[x][y];// 撤销前原来的棋子类型\r\n        this.boardMatrix[x][y] = EMPTY_CHESS;\r\n        this.chessNum--;// 更新棋子总数\r\n        this.updateNeighborAfterDo(x, y, oldType);// 更新邻居矩阵\r\n        this.restoreHeuristic(backup);// 更新启发函数矩阵\r\n        this.zobrist.goUpdate(x, y, oldType, EMPTY_CHESS);// 更新哈希值\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 判断棋盘是否已满\r\n     * \r\n     * @return {Boolean} 棋盘是否已满\r\n     */\r\n    isFull() {\r\n        return this.chessNum === Config.BOARD_SIZE * Config.BOARD_SIZE;\r\n    }\r\n\r\n    /**\r\n     * (x,y)两格内是否有邻居，无论什么类型\r\n     * \r\n     * @param {Number} x 行号\r\n     * @param {Number} y 列号\r\n     * \r\n     * @returns {Boolean} 两格内是否有邻居\r\n     */\r\n    hasNeighbor(x, y) {\r\n        return this.neighborNum[x][y] > 0;\r\n    }\r\n\r\n    /**\r\n     * 对(x,y)位置落子或撤销后，更新邻居矩阵\r\n     * \r\n     * @param {Number} x 落子位置或撤销位置的行号\r\n     * @param {Number} y 落子位置或撤销位置的列号\r\n     * @param {Number} oldType 操作前(x,y)的棋子类型\r\n     */\r\n    updateNeighborAfterDo(x, y, oldType) {\r\n        //更新2格范围内邻居矩阵\r\n        for (let i = x - 2; i <= x + 2; i++) {\r\n            for (let j = y - 2; j <= y + 2; j++) {\r\n                if (!ChessBoard.outOfBound(i, j)\r\n                    && !(i === x && j === y)) {\r\n                    if (oldType === EMPTY_CHESS) {\r\n                        // 在(x,y)落子，周围邻居数量加1\r\n                        this.neighborNum[i][j]++;\r\n                    } else {\r\n                        // 在(x,y)撤销，周围邻居数量减1\r\n                        this.neighborNum[i][j]--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //更新己方邻居矩阵\r\n        for (let i = x - 1; i <= x + 1; i++) {\r\n            for (let j = y - 1; j <= y + 1; j++) {\r\n                if (!ChessBoard.outOfBound(i, j)\r\n                    && !(i === x && j === y)) {// 在(x,y)落子\r\n                    if (oldType === EMPTY_CHESS) {\r\n                        if (this.boardMatrix[x][y] === HUM_CHESS) {\r\n                            // (x,y)现在是人类棋子\r\n                            this.humCloseNeighbor[i][j]++;\r\n                        } else {\r\n                            // (x,y)现在是电脑棋子\r\n                            this.comCloseNeighbor[i][j]++;\r\n                        }\r\n                    } else {// 在(x,y)撤销了一个棋子\r\n                        if (oldType === HUM_CHESS) {\r\n                            // (x,y)原来是人类棋子\r\n                            this.humCloseNeighbor[i][j]--;\r\n                        } else {\r\n                            // (x,y)原来是电脑棋子\r\n                            this.comCloseNeighbor[i][j]--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 备份启发函数矩阵\r\n     * \r\n     * @param {Number} x 中心位置行号\r\n     * @param {Number} y 中心位置列号\r\n     * \r\n     * @returns {MiBackup} 启发函数的备份\r\n     */\r\n    backupHeuristic(x, y) {\r\n        let verticals = ChessBoard.lineCoords(x, y, Direction.VERTICAL);\r\n        let horizontals = ChessBoard.lineCoords(x, y, Direction.HORIZONTAL);\r\n        let diagonals = ChessBoard.lineCoords(x, y, Direction.DIAGONAL);\r\n        let antidiagonals = ChessBoard.lineCoords(x, y, Direction.ANTIDIAGONAL);\r\n        let backup = new MiBackup();\r\n        backup.coords = [].concat(verticals).concat(horizontals).concat(diagonals).concat(antidiagonals);\r\n        for (let i = 0; i < backup.coords.length; i++) {\r\n            let coord = backup.coords[i];\r\n            let ux = coord.x, uy = coord.y;\r\n            if (!ChessBoard.outOfBound(ux, uy)) {\r\n                for (let dir = 0; dir < 4; dir++) {\r\n                    backup.hum[i][dir] = this.humHeuristic[ux][uy][dir];\r\n                    backup.com[i][dir] = this.comHeuristic[ux][uy][dir];\r\n                }\r\n            }\r\n        }\r\n        return backup;\r\n    }\r\n\r\n    /**\r\n     * 恢复米字形的启发函数\r\n     * \r\n     * @param {MiBackup} backup 米字位置的启发函数备份\r\n     */\r\n    restoreHeuristic(backup) {\r\n        for (let i = 0; i < backup.coords.length; i++) {\r\n            let coord = backup.coords[i];\r\n            let ux = coord.x, uy = coord.y;\r\n            if (!ChessBoard.outOfBound(ux, uy)) {\r\n                for (let dir = 0; dir < 4; dir++) {\r\n                    this.humHeuristic[ux][uy][dir] = backup.hum[i][dir];\r\n                    this.comHeuristic[ux][uy][dir] = backup.com[i][dir];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 落子或撤销后对启发函数值矩阵进行更新\r\n     * \r\n     * @param {Number} x 中心位置的行号\r\n     * @param {Number} y 中心位置的列号\r\n     */\r\n    updateHeuristicAfterDo(x, y) {\r\n        let verticals = ChessBoard.lineCoords(x, y, Direction.VERTICAL);\r\n        let horizontals = ChessBoard.lineCoords(x, y, Direction.HORIZONTAL);\r\n        let diagonals = ChessBoard.lineCoords(x, y, Direction.DIAGONAL);\r\n        let antidiagonals = ChessBoard.lineCoords(x, y, Direction.ANTIDIAGONAL);\r\n        this.calcuLineHeuristic(verticals, Direction.VERTICAL);\r\n        this.calcuLineHeuristic(horizontals, Direction.HORIZONTAL);\r\n        this.calcuLineHeuristic(diagonals, Direction.DIAGONAL);\r\n        this.calcuLineHeuristic(antidiagonals, Direction.ANTIDIAGONAL);\r\n    }\r\n\r\n    /**\r\n     * 计算并更新直线上坐标的启发函数\r\n     * \r\n     * @param {Coord[]} line 直线坐标\r\n     * @param {Number} dir 方向\r\n     */\r\n    calcuLineHeuristic(line, dir) {\r\n        for (let coord of line) {\r\n            let ux = coord.x, uy = coord.y;\r\n            if (!ChessBoard.outOfBound(ux, uy)\r\n                && this.boardMatrix[ux][uy] === EMPTY_CHESS) {\r\n                this.calcuHeuristic(ux, uy, dir);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 计算(x,y)处的启发函数值，并给启发函数矩阵的相应位置赋值\r\n     * \r\n     * 为了提高速度，只修改direction方向的启发函数值\r\n     * \r\n     * @param {Number} x 空位的行号\r\n     * @param {Number} y 空位的列号\r\n     * @param {Number} direction 指定的方向\r\n     */\r\n    calcuHeuristic(x, y, direction) {\r\n        let coords = ChessBoard.lineCoords(x, y, direction);// 生成所需的直线坐标\r\n        this.boardMatrix[x][y] = COM_CHESS;// 空位放上电脑棋子\r\n        this.comHeuristic[x][y][direction] = this.score(coords, COM_CHESS);\r\n        this.boardMatrix[x][y] = HUM_CHESS;// 空位放上人类棋子\r\n        this.humHeuristic[x][y][direction] = this.score(coords, HUM_CHESS);\r\n        this.boardMatrix[x][y] = EMPTY_CHESS;// 把空位恢复成空的\r\n    }\r\n\r\n    /**\r\n     * 根据直线中棋形的种类和数量，对直线coords打分\r\n     * \r\n     * @param {Coord[]} coords \r\n     * @param {Number} ChessType \r\n     * \r\n     * @returns {Number} 打出的分数\r\n     */\r\n    score(coords, ChessType) {\r\n        // 把coords所表示的横线标准化后再打分\r\n        let standardLine = this.standardizeLine(coords, ChessType);\r\n        return scoreLine(standardLine);\r\n    }\r\n\r\n    /**\r\n     * 获取某一方挑选空格时的启发式函数值\r\n     * \r\n     * @param {Number} x 空格的行号\r\n     * @param {Number} y 空格的列号\r\n     * @param {Number} type 哪一方的棋子要下到这个空格上\r\n     * \r\n     * @returns {Number} (x,y)空格对于该方的启发函数值\r\n     */\r\n    heuristic(x, y, type) {\r\n        let value;\r\n        if (type === COM_CHESS) {\r\n            // 电脑方的棋子要下到(x,y)位置的空格上\r\n            // 把该空格位置四个方向的启发函数值加起来\r\n            value = this.comHeuristic[x][y][Direction.VERTICAL] + this.comHeuristic[x][y][Direction.HORIZONTAL]\r\n                + this.comHeuristic[x][y][Direction.DIAGONAL] + this.comHeuristic[x][y][Direction.ANTIDIAGONAL];\r\n            // 每一个己方近邻额外多加10%的分\r\n            value *= 1 + this.comCloseNeighbor[x][y] * Config.CLOSE_RADIUS;\r\n        } else {\r\n            value = this.humHeuristic[x][y][Direction.VERTICAL] + this.humHeuristic[x][y][Direction.HORIZONTAL]\r\n                + this.humHeuristic[x][y][Direction.DIAGONAL] + this.humHeuristic[x][y][Direction.ANTIDIAGONAL];\r\n            value *= 1 + this.humCloseNeighbor[x][y] * Config.CLOSE_RADIUS;\r\n        }\r\n        return Math.round(value);\r\n    }\r\n\r\n    /**\r\n     * 获取一组“优良的”空格位置\r\n     * \r\n     * @param {Number} type 哪一方需要落子\r\n     * \r\n     * @returns {Coord[]} 一组“优良的”空格位置\r\n     */\r\n    generator(type) {\r\n        let self, enermy;\r\n        if (type === COM_CHESS) {\r\n            self = COM_CHESS;\r\n            enermy = HUM_CHESS;\r\n        } else {\r\n            self = HUM_CHESS;\r\n            enermy = COM_CHESS;\r\n        }\r\n\r\n        //不使用启发式规则\r\n        if (!Config.useHeuristic) {\r\n            let dullResult = [];\r\n            for (let x = 0; x < Config.BOARD_SIZE; x++) {\r\n                for (let y = 0; y < Config.BOARD_SIZE; y++) {\r\n                    if (this.boardMatrix[x][y] === EMPTY_CHESS\r\n                        && this.hasNeighbor(x, y)) {\r\n                        dullResult.push(new Coord(x, y));\r\n                    }\r\n                }\r\n            }\r\n            return dullResult;\r\n        }\r\n\r\n        let fives = [];\r\n        let selfAliveFours = [];\r\n        let enermyAliveFours = [];\r\n        let selfBlockedFours = [];\r\n        let enermyBlockedFours = [];\r\n        let selfDoubleThrees = [];\r\n        let enermyDoubleThrees = [];\r\n        let selfAliveThrees = [];\r\n        let otherPositions = [];\r\n\r\n        for (let x = 0; x < Config.BOARD_SIZE; x++) {\r\n            for (let y = 0; y < Config.BOARD_SIZE; y++) {\r\n                // 这个位置必须是空的，而且我们规定必须有邻居才有资格进入候选\r\n                if (this.boardMatrix[x][y] === EMPTY_CHESS && this.hasNeighbor(x, y)) {\r\n                    let selfPosScore = this.heuristic(x, y, self);\r\n                    let enermyPosScore = this.heuristic(x, y, enermy);\r\n                    if (selfPosScore >= Score.FIVE || enermyPosScore >= Score.FIVE) {\r\n                        fives.push(new Coord(x, y, Score.FIVE));\r\n                    } else if (selfPosScore >= Score.ALIVE_FOUR) {\r\n                        selfAliveFours.push(new Coord(x, y, selfPosScore));\r\n                    } else if (enermyPosScore >= Score.ALIVE_FOUR) {\r\n                        enermyAliveFours.push(new Coord(x, y, enermyPosScore));\r\n                    } else if (selfPosScore >= Score.BLOCKED_FOUR) {\r\n                        selfBlockedFours.push(new Coord(x, y, selfPosScore));\r\n                    } else if (enermyPosScore >= Score.BLOCKED_FOUR) {\r\n                        enermyBlockedFours.push(new Coord(x, y, enermyPosScore));\r\n                    }\r\n                    else if (selfPosScore >= Score.ALIVE_THREE * 2) {\r\n                        selfDoubleThrees.push(new Coord(x, y, selfPosScore));\r\n                    } else if (enermyPosScore >= Score.ALIVE_THREE * 2) {\r\n                        enermyDoubleThrees.push(new Coord(x, y, enermyPosScore));\r\n                    } else if (selfPosScore >= Score.ALIVE_THREE) {\r\n                        selfAliveThrees.push(new Coord(x, y, selfPosScore));\r\n                    } else {\r\n                        otherPositions.push(new Coord(x, y, Math.max(selfPosScore, enermyPosScore)));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let result = [];\r\n        /**\r\n         * 升序\r\n         * @param {Coord} a \r\n         * @param {Coord} b \r\n         * @returns {Number}\r\n         */\r\n        function ascSortFunc(a, b) {\r\n            return a.h - b.h;\r\n        }\r\n\r\n        if (fives.length > 0) {\r\n            return fives;\r\n        }\r\n\r\n        if (selfAliveFours.length > 0) {\r\n            return selfAliveFours;\r\n        }\r\n        if (enermyAliveFours.length > 0) {\r\n            selfBlockedFours.sort(ascSortFunc);\r\n            enermyAliveFours.sort(ascSortFunc);\r\n            if (selfBlockedFours.length > 0) {\r\n                result = result.concat(selfBlockedFours)\r\n                    .concat(enermyAliveFours);\r\n            } else {\r\n                result = result.concat(enermyAliveFours);\r\n            }\r\n            return result; //TODO\r\n        }\r\n\r\n        selfDoubleThrees.sort(ascSortFunc);\r\n        selfBlockedFours.sort(ascSortFunc);\r\n        selfAliveThrees.sort(ascSortFunc);\r\n        enermyDoubleThrees.sort(ascSortFunc);\r\n        enermyBlockedFours.sort(ascSortFunc);\r\n        otherPositions.sort(ascSortFunc);\r\n\r\n        result = result.concat(selfDoubleThrees)\r\n            .concat(selfBlockedFours)\r\n            .concat(selfAliveThrees)\r\n            .concat(enermyDoubleThrees)\r\n            .concat(enermyBlockedFours)\r\n            .concat(otherPositions);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 算杀\r\n     * \r\n     * @param {Number} type 哪一方需要落子\r\n     * \r\n     * @returns {Coord[]} 一组空格位置\r\n     */\r\n    generatorKill(type) {\r\n        let self, enermy;\r\n        if (type === COM_CHESS) {\r\n            self = COM_CHESS;\r\n            enermy = HUM_CHESS;\r\n        } else {\r\n            self = HUM_CHESS;\r\n            enermy = COM_CHESS;\r\n        }\r\n\r\n        //不使用启发式规则\r\n        if (!Config.useHeuristic) {\r\n            let dullResult = [];\r\n            for (let x = 0; x < Config.BOARD_SIZE; x++) {\r\n                for (let y = 0; y < Config.BOARD_SIZE; y++) {\r\n                    if (this.boardMatrix[x][y] === EMPTY_CHESS\r\n                        && this.hasNeighbor(x, y)) {\r\n                        dullResult.push(new Coord(x, y));\r\n                    }\r\n                }\r\n            }\r\n            return dullResult;\r\n        }\r\n\r\n        let fives = [];\r\n        let selfAliveFours = [];\r\n        let enermyAliveFours = [];\r\n        let selfBlockedFours = [];\r\n        let selfDoubleThrees = [];\r\n        let enermyDoubleThrees = [];\r\n        let selfAliveThrees = [];\r\n\r\n        for (let x = 0; x < Config.BOARD_SIZE; x++) {\r\n            for (let y = 0; y < Config.BOARD_SIZE; y++) {\r\n                // 这个位置必须是空的，而且我们规定必须有邻居才有资格进入候选\r\n                if (this.boardMatrix[x][y] === EMPTY_CHESS && this.hasNeighbor(x, y)) {\r\n                    let selfPosScore = this.heuristic(x, y, self);\r\n                    let enermyPosScore = this.heuristic(x, y, enermy);\r\n                    if (selfPosScore >= Score.FIVE || enermyPosScore >= Score.FIVE) {\r\n                        fives.push(new Coord(x, y, Score.FIVE));\r\n                    } else if (selfPosScore >= Score.ALIVE_FOUR) {\r\n                        selfAliveFours.push(new Coord(x, y, selfPosScore));\r\n                    } else if (enermyPosScore >= Score.ALIVE_FOUR) {\r\n                        enermyAliveFours.push(new Coord(x, y, enermyPosScore));\r\n                    } else if (selfPosScore >= Score.BLOCKED_FOUR) {\r\n                        selfBlockedFours.push(new Coord(x, y, selfPosScore));\r\n                    } else if (selfPosScore >= Score.ALIVE_THREE * 2) {\r\n                        selfDoubleThrees.push(new Coord(x, y, selfPosScore));\r\n                    } else if (enermyPosScore >= Score.ALIVE_THREE * 2) {\r\n                        enermyDoubleThrees.push(new Coord(x, y, enermyPosScore));\r\n                    } else if (selfPosScore >= Score.ALIVE_THREE) {\r\n                        selfAliveThrees.push(new Coord(x, y, selfPosScore));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let result = [];\r\n        /**\r\n         * 升序\r\n         * @param {Coord} a \r\n         * @param {Coord} b \r\n         * @returns {Number}\r\n         */\r\n        function ascSortFunc(a, b) {\r\n            return a.h - b.h;\r\n        }\r\n\r\n        if (fives.length > 0) {\r\n            return fives;\r\n        }\r\n\r\n        if (selfAliveFours.length > 0) {\r\n            return selfAliveFours;\r\n        }\r\n\r\n        if (enermyAliveFours.length > 0) {\r\n            selfBlockedFours.sort(ascSortFunc);\r\n            enermyAliveFours.sort(ascSortFunc);\r\n            if (selfBlockedFours.length > 0) {\r\n                result = result.concat(selfBlockedFours)\r\n                    .concat(enermyAliveFours);\r\n            } else {\r\n                result = result.concat(enermyAliveFours);\r\n            }\r\n            return result; //TODO\r\n        }\r\n\r\n        selfDoubleThrees.sort(ascSortFunc);\r\n        selfBlockedFours.sort(ascSortFunc);\r\n        selfAliveThrees.sort(ascSortFunc);\r\n        enermyDoubleThrees.sort(ascSortFunc);\r\n\r\n        result = result.concat(selfDoubleThrees)\r\n            .concat(selfBlockedFours)\r\n            .concat(selfAliveThrees)\r\n            .concat(enermyDoubleThrees);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 评估函数，对整个棋盘的局势进行评估\r\n     * \r\n     * 越大电脑越有利，越小人类越有利\r\n     * \r\n     * 胜负需要在这之前单独用`isWin()`判断\r\n     * \r\n     * @param {Number} type 哪一方已经落子\r\n     * \r\n     * @returns {Number} 评估值\r\n     */\r\n    evaluate(type) {\r\n        let comScore = this.evaluateOneSide(COM_CHESS);\r\n        let humScore = this.evaluateOneSide(HUM_CHESS);\r\n        if (type === COM_CHESS && humScore >= Score.FIVE) {\r\n            return -Score.INF;\r\n        } else if (type === HUM_CHESS && comScore >= Score.FIVE) {\r\n            return Score.INF;\r\n        } else {\r\n            return comScore - humScore;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 单方面评估函数，只针对某一方进行评估\r\n     * \r\n     * @param {Number} type 对哪一方进行评估\r\n     * \r\n     * @return {Number} 单方面评估值\r\n     */\r\n    evaluateOneSide(type) {\r\n        let result = 0;\r\n        for (let x = 0; x < Config.BOARD_SIZE; x++) {\r\n            for (let y = 0; y < Config.BOARD_SIZE; y++) {\r\n                if (this.boardMatrix[x][y] === EMPTY_CHESS) {\r\n                    result += this.heuristic(x, y, type);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 在(x,y)被落子后，落子的那一方是否赢了\r\n     * \r\n     * @param {Number} x 落子行号\r\n     * @param {Number} y 落子列号\r\n     * \r\n     * @returns {Boolean} 落子方是否赢了\r\n     */\r\n    isWin(x, y) {\r\n        return this.heuristic(x, y, this.boardMatrix[x][y]) >= Score.FIVE;\r\n    }\r\n\r\n    /**\r\n     * 把直线坐标变成标准化直线 坐标允许越界 两头添加阻塞\r\n     * \r\n     * @param {Coord[]} line 坐标直线\r\n     * @param {Number} type 己方\r\n     * \r\n     * @returns {Number[]} 标准直线\r\n     */\r\n    standardizeLine(line, type) {\r\n        let stdLine = [BLOCKED];\r\n        for (let coord of line) {\r\n            let x = coord.x, y = coord.y;\r\n            if (ChessBoard.outOfBound(x, y)) {\r\n                stdLine.push(BLOCKED);\r\n            } else if (this.boardMatrix[x][y] === EMPTY_CHESS) {\r\n                stdLine.push(EMPTY);\r\n            } else if (this.boardMatrix[x][y] === type) {\r\n                stdLine.push(SELF);\r\n            } else {\r\n                stdLine.push(BLOCKED);\r\n            }\r\n        }\r\n        stdLine.push(BLOCKED);\r\n        return stdLine;\r\n    }\r\n\r\n    /**\r\n     * 棋盘字符串\r\n     * @returns {String} 棋盘字符串\r\n     */\r\n    toString() {\r\n        let str = \"棋盘矩阵\\n\";\r\n        str += \"  \";\r\n        for (let i = 0; i < Config.BOARD_SIZE; i++) {\r\n            str += i % 10 + \" \";\r\n        }\r\n        str += \"\\n\";\r\n        for (let x = 0; x < Config.BOARD_SIZE; x++) {\r\n            str += x % 10 + \" \";\r\n            for (let y = 0; y < Config.BOARD_SIZE; y++) {\r\n                if (this.boardMatrix[x][y] == EMPTY_CHESS) {\r\n                    str += \"_ \";\r\n                } else if (this.boardMatrix[x][y] == COM_CHESS) {\r\n                    str += \"C \";\r\n                } else {\r\n                    str += \"H \";\r\n                }\r\n            }\r\n            str += \"\\n\";\r\n        }\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * 邻居字符串\r\n     */\r\n    neighborToString() {\r\n        let str = \"2步邻居矩阵\\n\";\r\n        str += \"  \";\r\n        for (let i = 0; i < Config.BOARD_SIZE; i++) {\r\n            str += i % 10 + \" \";\r\n        }\r\n        str += \"\\n\";\r\n        for (let x = 0; x < Config.BOARD_SIZE; x++) {\r\n            str += x % 10 + \" \";\r\n            for (let y = 0; y < Config.BOARD_SIZE; y++) {\r\n                if (this.boardMatrix[x][y] === HUM_CHESS) {\r\n                    str += \"H \";\r\n                } else if (this.boardMatrix[x][y] === COM_CHESS) {\r\n                    str += \"C \";\r\n                } else {\r\n                    if (this.neighborNum[x][y] === 0) {\r\n                        str += \"_ \";\r\n                    } else {\r\n                        str += this.neighborNum[x][y] + \" \";\r\n                    }\r\n                }\r\n            }\r\n            str += \"\\n\";\r\n        }\r\n        return str;\r\n    }\r\n\r\n    closeToString(type) {\r\n        let closeNeighbor = (type === COM_CHESS)\r\n            ? this.comCloseNeighbor\r\n            : this.humCloseNeighbor;\r\n        let str = type === COM_CHESS ? \"电脑\" : \"人类\";\r\n        str += \"近邻矩阵\\n\";\r\n        str += \"  \";\r\n        for (let i = 0; i < Config.BOARD_SIZE; i++) {\r\n            str += i % 10 + \" \";\r\n        }\r\n        str += \"\\n\";\r\n        for (let x = 0; x < Config.BOARD_SIZE; x++) {\r\n            str += x % 10 + \" \";\r\n            for (let y = 0; y < Config.BOARD_SIZE; y++) {\r\n                if (this.boardMatrix[x][y] === HUM_CHESS) {\r\n                    str += \"H \";\r\n                } else if (this.boardMatrix[x][y] === COM_CHESS) {\r\n                    str += \"C \";\r\n                } else {\r\n                    if (closeNeighbor[x][y] === 0) {\r\n                        str += \"_ \";\r\n                    } else {\r\n                        str += closeNeighbor[x][y] + \" \";\r\n                    }\r\n                }\r\n            }\r\n            str += \"\\n\";\r\n        }\r\n        return str;\r\n    }\r\n\r\n    heuristicToString(type) {\r\n        let str = type === COM_CHESS ? \"电脑\" : \"人类\";\r\n        str += \"空位分值矩阵\\n\";\r\n        str += \"  \";\r\n        for (let i = 0; i < Config.BOARD_SIZE; i++) {\r\n            str += i % 10 + \" \";\r\n        }\r\n        str += \"\\n\";\r\n        for (let x = 0; x < Config.BOARD_SIZE; x++) {\r\n            str += x % 10 + \" \";\r\n            for (let y = 0; y < Config.BOARD_SIZE; y++) {\r\n                if (this.boardMatrix[x][y] === HUM_CHESS) {\r\n                    str += \"H \";\r\n                } else if (this.boardMatrix[x][y] === COM_CHESS) {\r\n                    str += \"C \";\r\n                } else {\r\n                    let score = this.heuristic(x, y, type);\r\n                    if (score >= Score.FIVE) {\r\n                        str += \"5 \";\r\n                    } else if (score >= Score.ALIVE_FOUR) {\r\n                        str += \"4!\";\r\n                    } else if (score >= Score.BLOCKED_FOUR) {\r\n                        str += \"4 \";\r\n                    } else if (score >= Score.ALIVE_THREE) {\r\n                        str += \"3!\";\r\n                    } else if (score >= Score.BLOCKED_THREE) {\r\n                        str += \"3 \";\r\n                    } else if (score >= Score.ALIVE_TWO) {\r\n                        str += \"2!\";\r\n                    } else if (score >= Score.BLOCKED_TWO) {\r\n                        str += \"2 \";\r\n                    } else {\r\n                        str += \"_ \";\r\n                    }\r\n                }\r\n            }\r\n            str += \"\\n\";\r\n        }\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * 获取棋子的总数\r\n     * \r\n     * @returns {Number} 棋子的总数\r\n     */\r\n    getNumber() {\r\n        return this.chessNum;\r\n    }\r\n\r\n    /**\r\n     * 获取棋盘哈希值\r\n     * @returns {Number} 哈希值\r\n     */\r\n    getCode() {\r\n        return this.zobrist.zobristCode;\r\n    }\r\n\r\n    /**\r\n     * 判断坐标是否越界\r\n     * @param {Number} x 行号\r\n     * @param {Number} y 列号\r\n     * @returns {Boolean} (x,y)是否越界\r\n     */\r\n    static outOfBound(x, y) {\r\n        return (x < 0 || x >= Config.BOARD_SIZE || y < 0 || y >= Config.BOARD_SIZE);\r\n    }\r\n\r\n    /**\r\n     * 返回以(x,y)为中心，长度为9的直线上的所有坐标\r\n     * \r\n     * @param {Number} x 坐标行号\r\n     * @param {Number} y 坐标列号\r\n     * @param {Number} direction 方向\r\n     * \r\n     * @returns {Coord[]} 直线上的所有坐标\r\n     */\r\n    static lineCoords(x, y, direction) {\r\n        let coords = [];\r\n        if (direction === Direction.VERTICAL) {// 竖直方向\r\n            for (let i = x - 4; i <= x + 4; i++) {\r\n                coords.push(new Coord(i, y));\r\n            }\r\n        } else if (direction == Direction.HORIZONTAL) {// 水平方向\r\n            for (let j = y - 4; j <= y + 4; j++) {\r\n                coords.push(new Coord(x, j));\r\n            }\r\n        } else if (direction == Direction.DIAGONAL) {// 对角线\r\n            let i = x - 4, j = y - 4;\r\n            for (let k = 0; k <= 8; k++) {\r\n                coords.push(new Coord(i + k, j + k));\r\n            }\r\n        } else {// 反对角线\r\n            let i = x + 4, j = y - 4;\r\n            for (let k = 0; k <= 8; k++) {\r\n                coords.push(new Coord(i - k, j + k));\r\n            }\r\n        }\r\n        return coords;\r\n    }\r\n}","/**无效的f值 */\r\nconst INVALID_F = 0;\r\n/**准确的f值 */\r\nconst EXACT_F = 1;\r\n/**f值是下界 */\r\nconst LOWER_F = 2;\r\n/**f值是上界 */\r\nconst UPPER_F = 3;\r\n/**\r\n * TableCell\r\n */\r\nexport default class TableCell {\r\n    /**\r\n     * 构造函数\r\n     * @constructor\r\n     */\r\n    constructor() {\r\n        /**表项是否有效 */\r\n        this.isValid = false;\r\n        /**表项对应的哈希值 */\r\n        this.hashCode = 0;\r\n        /**棋子个数 */\r\n        this.chessNum = 0;\r\n\r\n        /**记录的结点f值的类型 */\r\n        this.fType = INVALID_F;\r\n        /**结点回传f值 */\r\n        this.fValue = 19;\r\n        /**子树深度 */\r\n        this.treeDepth = 0;\r\n\r\n        /**叶节点评估值是否有效 */\r\n        this.evaValid = false;\r\n        /**叶节点评估值 */\r\n        this.evaluate = 0;\r\n    }\r\n\r\n    /**\r\n     * 该表项是否有效\r\n     * @param {Number} hashCode 棋盘哈希值\r\n     * @param {Number} chessNum 棋盘棋子个数\r\n     */\r\n    validCell(hashCode, chessNum) {\r\n        // if (this.isValid && this.hashCode === hashCode && this.chessNum != chessNum) {\r\n        //     console.log(\"same code, not same num\");\r\n        // }\r\n        return (this.isValid\r\n            && this.hashCode === hashCode\r\n            && this.chessNum === chessNum);\r\n    }\r\n}\r\nexport { INVALID_F, EXACT_F, LOWER_F, UPPER_F };","//import TableCell from \"./TableCell\";\r\n\r\nconst TABLE_SIZE = 1 << 21;\r\nlet cells = new Array(TABLE_SIZE);\r\ncells.fill(null, 0, TABLE_SIZE);\r\n//console.log(\"transtable size:\" + TABLE_SIZE);\r\n\r\n/**\r\n * 获取对应的置换表表项\r\n * @param {Number} hashCode 棋盘哈希值\r\n * @returns {TableCell} 置换表表项\r\n */\r\nfunction getCell(hashCode) {\r\n    let index = ((hashCode % TABLE_SIZE) + TABLE_SIZE) % TABLE_SIZE;\r\n    return cells[index];\r\n}\r\n\r\n/**\r\n * 新建对应的置换表表项\r\n * @param {Number} hashCode 棋盘哈希值\r\n * @param {TableCell} cell 新建的置换表表项\r\n */\r\nfunction setCell(hashCode, cell) {\r\n    let index = ((hashCode % TABLE_SIZE) + TABLE_SIZE) % TABLE_SIZE;\r\n    cells[index] = cell;\r\n}\r\n\r\nexport { getCell, setCell };","import { COM_CHESS, HUM_CHESS } from \"./ChessType.js\";\r\nimport Config from \"./Config.js\";\r\n//import TableCell from \"./TableCell.js\";\r\nimport TableCell, { INVALID_F, EXACT_F, LOWER_F, UPPER_F } from \"./TableCell.js\";\r\nimport { getCell, setCell } from \"./TransTable.js\";\r\nimport Status from \"./Status.js\";\r\n//import ChessBoard from \"./ChessBoard.js\";\r\nimport Score from \"./Score.js\";\r\nimport Coord from \"./Coord.js\";\r\n\r\nconst MAX_FLOOR = 0;\r\nconst MIN_FLOOR = 1;\r\n\r\n/**\r\n * 极大极小搜索的递归函数，承诺在返回前撤销一切操作\r\n * \r\n * @param {ChessBoard} board 棋盘\r\n * @param {Number} alpha\r\n * @param {Number} beta \r\n * @param {Number} floorType 当前结点层的类型\r\n * @param {Number} depth 当前结点的深度\r\n * @param {Number} hasX 已放置的棋子的行号\r\n * @param {Number} hasY 已放置的棋子的列号\r\n * @param {Number} hasType 已放置的棋子的类型\r\n * \r\n * @returns {Number} 该结点的倒推f值\r\n */\r\nfunction dfs(board, alpha, beta, floorType, depth, hasX, hasY, hasType) {\r\n    Status.nodeNum++;\r\n    Status.goMaxDepth = Math.max(Status.goMaxDepth, depth);\r\n    Status.posDepth = Math.max(Status.posDepth, depth);\r\n\r\n    // 判断是否一方已赢\r\n    if (board.isWin(hasX, hasY)) {\r\n        Status.winNum++;//TODO\r\n        return (hasType === COM_CHESS) ? Score.INF : -Score.INF;\r\n    }\r\n\r\n    /**置换表表项*/\r\n    let cell = getCell(board.getCode());\r\n    if (cell === null) {\r\n        cell = new TableCell();\r\n        setCell(board.getCode(), cell);\r\n    }\r\n    /**当前结点子树深度 */\r\n    let treeDepth = Config.MAX_DEPTH - depth;\r\n\r\n    // 叶子结点评估\r\n    if (board.isFull() || depth === Config.MAX_DEPTH) {\r\n        Status.leafNum++;\r\n        /**评估值 */\r\n        let evaValue;\r\n        if (Config.useTransTable\r\n            && cell.validCell(board.getCode(), board.getNumber())\r\n            && cell.evaValid) {\r\n            Status.leafMatch++;\r\n            evaValue = cell.evaluate;\r\n        } else {\r\n            //哪一方已经落子\r\n            let type = (floorType === MAX_FLOOR) ? HUM_CHESS : COM_CHESS;\r\n            evaValue = board.evaluate(type);\r\n\r\n            cell.isValid = true;\r\n            cell.hashCode = board.getCode();\r\n            cell.chessNum = board.getNumber();\r\n            cell.evaValid = true;\r\n            cell.evaluate = evaValue;\r\n        }\r\n        return evaValue;\r\n    }\r\n\r\n\r\n    if (floorType === MAX_FLOOR) {\r\n        let f = -Score.INF;//当前结点回传值\r\n        if (Config.useTransTable\r\n            && cell.validCell(board.getCode(), board.getNumber())\r\n            && cell.fType != INVALID_F\r\n            && cell.treeDepth >= treeDepth) {\r\n            if (cell.fType === EXACT_F) {\r\n                Status.completeMatch++;//完全命中\r\n                return cell.fValue;//直接把f值返回\r\n            } else if (cell.fType === LOWER_F) {\r\n                Status.partialMatch++;//部分命中\r\n                f = cell.fValue;//缩小f的范围\r\n            }\r\n        }\r\n\r\n        let emptyPosList = (depth >= Config.START_KILLER)\r\n            ? board.generatorKill(COM_CHESS)\r\n            : board.generator(COM_CHESS);\r\n        let hasPurning = false;//是否发生了剪枝\r\n        for (let i = 0, cnt = 0;\r\n            i < emptyPosList.length && cnt < Config.MAX_EMPTY_NUM;\r\n            i++ , cnt++) {\r\n            let x = emptyPosList[i].x, y = emptyPosList[i].y;\r\n            let backup = board.backupHeuristic(x, y);//备份\r\n\r\n            board.put(x, y, COM_CHESS);//落子\r\n            let childF = dfs(board, alpha, beta, MIN_FLOOR, depth + 1, x, y, COM_CHESS);\r\n            board.undo(x, y, backup);//撤销\r\n\r\n            f = Math.max(f, childF);\r\n            alpha = Math.max(alpha, f);\r\n            // beta剪枝\r\n            if (beta <= alpha) {\r\n                Status.ABPruning++;\r\n                hasPurning = true;\r\n                break;\r\n            }\r\n            // 超时强制剪枝\r\n            if (new Date().getTime() - Status.startTime > Config.MAX_TIME) {\r\n                Status.isOutTime = true;\r\n                hasPurning = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (Config.useTransTable) {\r\n            // 更新置换表\r\n            if (!cell.validCell(board.getCode(), board.getNumber())\r\n                || board.fType === INVALID_F) {\r\n                cell.isValid = true;\r\n                cell.hashCode = board.getCode();\r\n                cell.chessNum = board.getNumber();\r\n                cell.treeDepth = treeDepth;\r\n                cell.f = f;\r\n                cell.fType = hasPurning ? LOWER_F : EXACT_F;\r\n            } else if (treeDepth >= cell.treeDepth) {\r\n                if (hasPurning) {\r\n                    if (treeDepth > cell.treeDepth\r\n                        || (treeDepth === cell.treeDepth && f > cell.f)) {\r\n                        cell.f = f;\r\n                        cell.fType = LOWER_F;\r\n                        cell.treeDepth = treeDepth;\r\n                    }\r\n                } else {\r\n                    cell.f = f;\r\n                    cell.fType = EXACT_F;\r\n                    cell.treeDepth = treeDepth;\r\n                }\r\n            }\r\n        }\r\n\r\n        return f;\r\n    } else {\r\n        let f = Score.INF;//当前结点回传值\r\n        if (Config.useTransTable\r\n            && cell.validCell(board.getCode(), board.getNumber())\r\n            && cell.fType != INVALID_F\r\n            && cell.treeDepth >= treeDepth) {\r\n            if (cell.fType === EXACT_F) {\r\n                Status.completeMatch++;//完全命中\r\n                return cell.fValue;//直接把f值返回\r\n            } else if (cell.fType === UPPER_F) {\r\n                Status.partialMatch++;//部分命中\r\n                f = cell.fValue;//缩小f的范围\r\n            }\r\n        }\r\n\r\n        let emptyPosList = (depth >= Config.START_KILLER)\r\n            ? board.generatorKill(HUM_CHESS)\r\n            : board.generator(HUM_CHESS);\r\n        let hasPurning = false;//是否发生了剪枝\r\n        for (let i = 0, cnt = 0;\r\n            i < emptyPosList.length && cnt < Config.MAX_EMPTY_NUM;\r\n            i++ , cnt++) {\r\n            let x = emptyPosList[i].x, y = emptyPosList[i].y;\r\n            let backup = board.backupHeuristic(x, y);//备份\r\n\r\n            board.put(x, y, HUM_CHESS);//落子\r\n            let childF = dfs(board, alpha, beta, MAX_FLOOR, depth + 1, x, y, HUM_CHESS);\r\n            board.undo(x, y, backup);//撤销\r\n\r\n            f = Math.min(f, childF);\r\n            beta = Math.min(beta, f);\r\n            // alpha剪枝\r\n            if (beta <= alpha) {\r\n                Status.ABPruning++;\r\n                hasPurning = true;\r\n                break;\r\n            }\r\n            // 超时强制剪枝\r\n            if (new Date().getTime() - Status.startTime > Config.MAX_TIME) {\r\n                Status.isOutTime = true;\r\n                hasPurning = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (Config.useTransTable) {\r\n            // 更新置换表\r\n            if (!cell.validCell(board.getCode(), board.getNumber())\r\n                || board.fType === INVALID_F) {\r\n                cell.isValid = true;\r\n                cell.hashCode = board.getCode();\r\n                cell.chessNum = board.getNumber();\r\n                cell.treeDepth = treeDepth;\r\n                cell.f = f;\r\n                cell.fType = hasPurning ? UPPER_F : EXACT_F;\r\n            } else if (treeDepth >= cell.treeDepth) {\r\n                if (hasPurning) {\r\n                    if (treeDepth > cell.treeDepth\r\n                        || (treeDepth === cell.treeDepth && f < cell.f)) {\r\n                        cell.f = f;\r\n                        cell.fType = UPPER_F;\r\n                        cell.treeDepth = treeDepth;\r\n                    }\r\n                } else {\r\n                    cell.f = f;\r\n                    cell.fType = EXACT_F;\r\n                    cell.treeDepth = treeDepth;\r\n                }\r\n            }\r\n        }\r\n\r\n        return f;\r\n    }\r\n}\r\n\r\n/**\r\n * 获取电脑一方的最佳落子位置\r\n * @param {ChessBoard} board 当前棋盘\r\n * @returns {Coord} 电脑应该落子的坐标\r\n */\r\nfunction getBestPut(board) {\r\n    initStatus();\r\n\r\n    if (!Config.useHeuristic) {\r\n        Config.MAX_DEPTH = 3;\r\n        Config.MAX_EMPTY_NUM = 15 * 15;\r\n    } else {\r\n        if (board.getNumber() < 4) {\r\n            //1~2回合\r\n            Config.MAX_DEPTH = 4;\r\n            Config.MAX_EMPTY_NUM = 20;\r\n        } else if (board.getNumber() < 6) {\r\n            //3回合\r\n            Config.MAX_DEPTH = 5;\r\n            Config.MAX_EMPTY_NUM = 16;\r\n        } else if (board.getNumber() < 8) {\r\n            //4回合\r\n            Config.MAX_DEPTH = 6;\r\n            Config.MAX_EMPTY_NUM = 15;\r\n        } else if (board.getNumber() < 10) {\r\n            //5回合\r\n            Config.MAX_DEPTH = 7;\r\n            Config.MAX_EMPTY_NUM = 15;\r\n        } else if (board.getNumber() < 12) {\r\n            //6回合\r\n            Config.MAX_DEPTH = 8;\r\n            Config.MAX_EMPTY_NUM = 15;\r\n        } else {\r\n            Config.MAX_DEPTH = 9;\r\n            Config.MAX_EMPTY_NUM = 15;\r\n        }\r\n        // if (board.getNumber() < 4) {\r\n        //     //1~2回合\r\n        //     Config.MAX_DEPTH = 3;\r\n        //     Config.MAX_EMPTY_NUM = 20;\r\n        // } else if (board.getNumber() < 6) {\r\n        //     //3回合\r\n        //     Config.MAX_DEPTH = 4;\r\n        //     Config.MAX_EMPTY_NUM = 18;\r\n        // } else if (board.getNumber() < 8) {\r\n        //     //4回合\r\n        //     Config.MAX_DEPTH = 5;\r\n        //     Config.MAX_EMPTY_NUM = 16;\r\n        // } else if (board.getNumber() < 10) {\r\n        //     //5回合\r\n        //     Config.MAX_DEPTH = 6;\r\n        //     Config.MAX_EMPTY_NUM = 15;\r\n        // } else if (board.getNumber() < 12) {\r\n        //     //6回合\r\n        //     Config.MAX_DEPTH = 7;\r\n        //     Config.MAX_EMPTY_NUM = 15;\r\n        // } else {\r\n        //     Config.MAX_DEPTH = 8;\r\n        //     Config.MAX_EMPTY_NUM = 15;\r\n        // }\r\n    }\r\n\r\n    let f = -Score.INF - 1;\r\n    let alpha = -Score.INF, beta = Score.INF;\r\n    let longest = -1;\r\n    let bestPut = new Coord(7, 7);//若generator生成的候选数组为空则默认放中间\r\n    let emptyPosList = board.generator(COM_CHESS);\r\n    for (let i = 0, cnt = 0;\r\n        i < emptyPosList.length && cnt < Config.MAX_EMPTY_NUM;\r\n        i++ , cnt++) {\r\n        let x = emptyPosList[i].x, y = emptyPosList[i].y;\r\n        let backup = board.backupHeuristic(x, y);//备份\r\n        Status.posDepth = 0;\r\n\r\n        board.put(x, y, COM_CHESS);//落子\r\n        let childF = dfs(board, alpha, beta, MIN_FLOOR, 1, x, y, COM_CHESS);\r\n        board.undo(x, y, backup);//撤销\r\n\r\n        if (childF <= -Score.INF && f <= -Score.INF) {//f和childF都代表失败\r\n            if (Status.posDepth > longest) {//更慢失败才能选择\r\n                f = childF;\r\n                bestPut.x = x;\r\n                bestPut.y = y;\r\n                longest = Status.posDepth;\r\n            }\r\n        } else if (childF > f) {\r\n            f = childF;\r\n            bestPut.x = x;\r\n            bestPut.y = y;\r\n        }\r\n        alpha = Math.max(alpha, f);\r\n        if (beta <= alpha) {\r\n            break;\r\n        }\r\n    }\r\n    Status.f = f;\r\n    console.log(getStatusStr(f));\r\n    return bestPut;\r\n}\r\n\r\n/**\r\n * 每轮搜索开始前初始化Status对象的状态\r\n */\r\nfunction initStatus() {\r\n    Status.startTime = new Date().getTime();\r\n    Status.isOutTime = false;\r\n    Status.goMaxDepth = 0;\r\n    Status.nodeNum = 1;\r\n    Status.leafNum = 0;\r\n    Status.winNum = 0;\r\n    Status.completeMatch = 0;\r\n    Status.partialMatch = 0;\r\n    Status.leafMatch = 0;\r\n    Status.ABPruning = 0;\r\n    Status.f = 0;\r\n}\r\n\r\n/**\r\n * 获取表示本轮搜索状态的字符串\r\n * @param {Number} f 本轮搜索的回传f值\r\n * @returns {String} 表示本轮搜索状态的字符串\r\n */\r\nfunction getStatusStr() {\r\n    let str = \"\";\r\n    str += \"最大搜索深度：\" + Status.goMaxDepth + \"\\n\";\r\n    str += \"考察结点个数：\" + Status.nodeNum + \" \"\r\n        + \"叶子结点个数：\" + Status.leafNum + \" \"\r\n        + \"输赢局面个数：\" + Status.winNum + \"\\n\";\r\n    str += \"置换表命中总次数：\" + (Status.completeMatch + Status.partialMatch + Status.leafMatch) + \" \"\r\n        + \"完全命中：\" + Status.completeMatch + \" \"\r\n        + \"部分命中：\" + Status.partialMatch + \" \"\r\n        + \"叶子结点命中：\" + Status.leafMatch + \"\\n\";\r\n    str += \"用时：\" + Math.round((new Date().getTime() - Status.startTime) / 1000.0) + \"秒\" + \" \"\r\n        + \"超时：\" + Status.isOutTime + \"\\n\";\r\n    str += \"ab剪枝次数：\" + Status.ABPruning + \"\\n\";\r\n    str += \"回传f值：\" + Status.f + \"\\n\";\r\n    return str;\r\n}\r\n\r\nexport default getBestPut;","import ChessBoard from \"../GameAlgo/ChessBoard.js\";\r\nimport getBestPut from \"../GameAlgo/SearchAlgo.js\";\r\nimport { HUM_CHESS, COM_CHESS } from \"../GameAlgo/ChessType.js\";\r\n\r\nconst board = new ChessBoard();\r\nconst UNKNOWN_WIN = 0, HUM_WIN = 1, COM_WIN = 2, DRAW = 3;\r\n/**游戏结局状况 */\r\nlet winStatus = UNKNOWN_WIN;\r\n/**游戏是否结束 */\r\nlet isEnd = false;\r\n\r\nfunction controlInit() {\r\n    winStatus = UNKNOWN_WIN;\r\n    isEnd = false;\r\n    board.reset();\r\n}\r\n\r\nfunction humanPlay(x, y) {\r\n    board.put(x, y, HUM_CHESS);\r\n    console.log(\"人类落子\" + \" (\" + x + \", \" + y + \")\");\r\n    if (board.isWin(x, y)) {\r\n        isEnd = true;\r\n        winStatus = HUM_WIN;\r\n    } else if (board.isFull()) {\r\n        isEnd = true;\r\n        winStatus = DRAW;\r\n    }\r\n    //console.log(board.toString());\r\n    console.log(board.heuristicToString(COM_CHESS));\r\n    console.log(board.heuristicToString(HUM_CHESS));\r\n    console.log(board.neighborToString());\r\n    //console.log(board.closeToString(HUM_CHESS));\r\n}\r\nfunction getComputerPlay() {\r\n    let coord = getBestPut(board);\r\n    let x = coord.x, y = coord.y;\r\n    board.put(x, y, COM_CHESS);\r\n    console.log(\"电脑落子\" + \" (\" + x + \", \" + y + \")\");\r\n    if (board.isWin(x, y)) {\r\n        isEnd = true;\r\n        winStatus = COM_WIN;\r\n    } else if (board.isFull()) {\r\n        isEnd = true;\r\n        winStatus = DRAW;\r\n    }\r\n    //console.log(board.toString());\r\n    console.log(board.heuristicToString(COM_CHESS));\r\n    console.log(board.heuristicToString(HUM_CHESS));\r\n    console.log(board.neighborToString());\r\n    //console.log(board.closeToString(COM_CHESS));\r\n    return { x: coord.x, y: coord.y };\r\n}\r\n\r\nexport {\r\n    getComputerPlay, humanPlay,\r\n    winStatus,\r\n    UNKNOWN_WIN, HUM_WIN, COM_WIN, DRAW,\r\n    isEnd,\r\n    controlInit\r\n};","<template>\n  <div id=\"app\">\n    <grid>\n      <template #board>\n        <game-boardObj\n          ref=\"board\"\n          :ui-board=\"uiBoard\"\n          :just-chess=\"justChess\"\n          :mask-on=\"maskOn\"\n          :playing=\"playing\"\n          :first-chess=\"firstChess\"\n          @cell-click=\"handleClick\"\n        />\n      </template>\n      <template #card>\n        <info-card ref=\"infoCard\" v-show=\"playing\" />\n        <setting-card @game-start=\"handleStart\" v-show=\"!playing\" />\n      </template>\n    </grid>\n  </div>\n</template>\n\n<script>\nimport GameBoard from \"./components/GameBoard.vue\";\nimport MyGrid from \"./components/MyGrid.vue\";\nimport InfoCard from \"./components/InfoCard.vue\";\nimport SettingCard from \"./components/SettingCard.vue\";\n\nimport { EMPTY_CHESS, COM_CHESS, HUM_CHESS } from \"./GameAlgo/ChessType.js\";\nimport {\n  humanPlay,\n  getComputerPlay,\n  winStatus,\n  HUM_WIN,\n  COM_WIN,\n  DRAW,\n  isEnd,\n  controlInit\n} from \"./Controller/GameControl.js\";\n\nexport default {\n  name: \"app\",\n  components: {\n    \"game-boardObj\": GameBoard,\n    \"info-card\": InfoCard,\n    \"setting-card\": SettingCard,\n    grid: MyGrid\n  },\n  data: function() {\n    return {\n      /**控制UI界面的二维数组 */\n      uiBoard: new Array(15 * 15),\n      /**状态字符串 */\n      StatusInfo: \"no status info\",\n      /**棋盘上棋子的总数 */\n      chessNumber: 0,\n      /**刚下的棋子的坐标 */\n      justChess: -1,\n      maskOn: false,\n      playing: false,\n      firstChess: COM_CHESS\n    };\n  },\n  methods: {\n    init() {\n      for (let i = 0; i < 15 * 15; i++) {\n        let emptyObj = { chess: EMPTY_CHESS, number: -1 };\n        this.uiBoard[i] = emptyObj;\n        this.$set(this.uiBoard, i, emptyObj);\n      }\n      this.chessNumber = 0;\n      this.justChess = -1;\n      this.maskOn = false;\n    },\n    handleStart(firstChess) {\n      this.init();\n      controlInit();\n\n      this.$refs.board.showMsg(\"开始\");\n      this.firstChess = firstChess;\n      console.log(this.firstChess);\n      this.playing = true;\n      if (this.firstChess === COM_CHESS) {\n        setTimeout(() => {\n          this.handleComputerPlay();\n        }, 2601);\n      }\n    },\n    handleComputerPlay() {\n      let c = getComputerPlay();\n      let index = c.x * 15 + c.y;\n      let comObj = { chess: COM_CHESS, number: ++this.chessNumber };\n      this.uiBoard[index] = comObj;\n      this.$set(this.uiBoard, index, comObj);\n      this.justChess = index;\n      this.maskOn = false;\n      this.$refs.infoCard.update();\n      if (isEnd) {\n        this.playing = false;\n        if (winStatus === COM_WIN) {\n          this.$refs.board.showMsg(\"电脑赢了\");\n        } else if (winStatus === DRAW) {\n          this.$refs.board.showMsg(\"平局\");\n        }\n      }\n    },\n    handleClick(x, y) {\n      let index = x * 15 + y;\n      if (this.playing && this.uiBoard[index].chess === EMPTY_CHESS) {\n        this.maskOn = true;\n        let humObj = { chess: HUM_CHESS, number: ++this.chessNumber };\n        this.uiBoard[index].chess = humObj;\n        this.$set(this.uiBoard, index, humObj);\n        this.justChess = index;\n        setTimeout(() => {\n          humanPlay(x, y);\n          if (isEnd) {\n            this.playing = false;\n            this.maskOn = false;\n            if (winStatus === HUM_WIN) {\n              this.$refs.board.showMsg(\"你赢了\");\n            } else if (winStatus === DRAW) {\n              this.$refs.board.showMsg(\"平局\");\n            }\n          } else {\n            this.handleComputerPlay();\n          }\n        }, 305);\n      }\n    }\n  },\n  created() {\n    this.init();\n  }\n};\n</script>\n\n<style>\n/**把网页的边界去掉 */\nbody {\n  margin: 0 0;\n  background-color: #ecf0f3;\n  font-size: 16px;\n}\n\n/**改变盒子模型 */\n* {\n  box-sizing: border-box;\n}\n\n#app {\n  font-family: sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=3bd9123f&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GameBoard.vue?vue&type=style&index=0&id=521b3a22&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GameBoard.vue?vue&type=style&index=0&id=521b3a22&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InfoCard.vue?vue&type=style&index=0&id=e63cbf3a&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InfoCard.vue?vue&type=style&index=0&id=e63cbf3a&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SettingCard.vue?vue&type=style&index=0&id=a98acc88&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SettingCard.vue?vue&type=style&index=0&id=a98acc88&scoped=true&lang=css&\""],"sourceRoot":""}